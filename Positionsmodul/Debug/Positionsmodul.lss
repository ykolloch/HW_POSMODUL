
Positionsmodul.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000106  00800100  00000b1a  00000bae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000db  00800206  00800206  00000cb4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d47  00000000  00000000  00000dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002b7  00000000  00000000  00001b07  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003e5  00000000  00000000  00001dbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000270  00000000  00000000  000021a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000339  00000000  00000000  00002414  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004be  00000000  00000000  0000274d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00002c0b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__vector_20>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	12 e0       	ldi	r17, 0x02	; 2
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ea e1       	ldi	r30, 0x1A	; 26
  90:	fb e0       	ldi	r31, 0x0B	; 11
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a6 30       	cpi	r26, 0x06	; 6
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	a6 e0       	ldi	r26, 0x06	; 6
  a2:	b2 e0       	ldi	r27, 0x02	; 2
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a1 3e       	cpi	r26, 0xE1	; 225
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 a9 02 	call	0x552	; 0x552 <main>
  b2:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <uart_init>:
	} else if(strcmp(p2p_found2, subString) == 0) {
		PORTD ^= (1 << LED_RED);
		strncpy(&macAddress, &temp[10], 17);
		macAddress[18] = '\0';
	}
}
  ba:	10 92 c5 00 	sts	0x00C5, r1
  be:	81 e8       	ldi	r24, 0x81	; 129
  c0:	80 93 c4 00 	sts	0x00C4, r24
  c4:	e1 ec       	ldi	r30, 0xC1	; 193
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	88 61       	ori	r24, 0x18	; 24
  cc:	80 83       	st	Z, r24
void uart_init(void) {
	UBRR0H = (BAUDRATE >> 8);
	UBRR0L = BAUDRATE;
	
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0);
	UCSR0C |= (1 << UCSZ01) | ( 1<< UCSZ00);
  ce:	a2 ec       	ldi	r26, 0xC2	; 194
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	8c 91       	ld	r24, X
  d4:	86 60       	ori	r24, 0x06	; 6
  d6:	8c 93       	st	X, r24
	
	UCSR0B |= (1 << RXCIE0);
  d8:	80 81       	ld	r24, Z
  da:	80 68       	ori	r24, 0x80	; 128
  dc:	80 83       	st	Z, r24
	UCSR0A |= (1 << RXC0);
  de:	e0 ec       	ldi	r30, 0xC0	; 192
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	80 68       	ori	r24, 0x80	; 128
  e6:	80 83       	st	Z, r24
	
	sei();
  e8:	78 94       	sei
  ea:	08 95       	ret

000000ec <uart_init2>:

/************************************************************************/
/* init UART1 with Interrupts											*/
/************************************************************************/
void uart_init2(void) {
	UBRR1H = (BAUDRATE >> 8);
  ec:	10 92 cd 00 	sts	0x00CD, r1
	UBRR1L = BAUDRATE;
  f0:	81 e8       	ldi	r24, 0x81	; 129
  f2:	80 93 cc 00 	sts	0x00CC, r24
	
	UCSR1B |= (1 << TXEN1) | (1 << RXEN1);
  f6:	e9 ec       	ldi	r30, 0xC9	; 201
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	88 61       	ori	r24, 0x18	; 24
  fe:	80 83       	st	Z, r24
	UCSR1C |= (1 << UCSZ11) | ( 1 << UCSZ10);
 100:	aa ec       	ldi	r26, 0xCA	; 202
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	8c 91       	ld	r24, X
 106:	86 60       	ori	r24, 0x06	; 6
 108:	8c 93       	st	X, r24
	
	UCSR1B |= (1 << RXCIE1);
 10a:	80 81       	ld	r24, Z
 10c:	80 68       	ori	r24, 0x80	; 128
 10e:	80 83       	st	Z, r24
	UCSR1A |= (1 << RXC1);
 110:	e8 ec       	ldi	r30, 0xC8	; 200
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	80 68       	ori	r24, 0x80	; 128
 118:	80 83       	st	Z, r24
 11a:	08 95       	ret

0000011c <uart_transmit>:

/************************************************************************/
/* transmit char for UART0												*/
/************************************************************************/
void uart_transmit(char c) {
	while(!(UCSR0A & (1 << UDRE0))) {
 11c:	e0 ec       	ldi	r30, 0xC0	; 192
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	90 81       	ld	r25, Z
 122:	95 ff       	sbrs	r25, 5
 124:	fd cf       	rjmp	.-6      	; 0x120 <uart_transmit+0x4>
	}
	UDR0 = c;
 126:	80 93 c6 00 	sts	0x00C6, r24
 12a:	08 95       	ret

0000012c <uart_sendString>:
}

/************************************************************************/
/* sends String for UART0 via uart_transmit().                          */
/************************************************************************/
void uart_sendString(char temp[]) {
 12c:	ef 92       	push	r14
 12e:	ff 92       	push	r15
 130:	0f 93       	push	r16
 132:	1f 93       	push	r17
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	8c 01       	movw	r16, r24
 13a:	7c 01       	movw	r14, r24
	for(int i=0; i < strlen(temp); i++) {
 13c:	c0 e0       	ldi	r28, 0x00	; 0
 13e:	d0 e0       	ldi	r29, 0x00	; 0
 140:	06 c0       	rjmp	.+12     	; 0x14e <uart_sendString+0x22>
		uart_transmit(temp[i]);
 142:	f7 01       	movw	r30, r14
 144:	81 91       	ld	r24, Z+
 146:	7f 01       	movw	r14, r30
 148:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>

/************************************************************************/
/* sends String for UART0 via uart_transmit().                          */
/************************************************************************/
void uart_sendString(char temp[]) {
	for(int i=0; i < strlen(temp); i++) {
 14c:	21 96       	adiw	r28, 0x01	; 1
 14e:	f8 01       	movw	r30, r16
 150:	01 90       	ld	r0, Z+
 152:	00 20       	and	r0, r0
 154:	e9 f7       	brne	.-6      	; 0x150 <uart_sendString+0x24>
 156:	31 97       	sbiw	r30, 0x01	; 1
 158:	e0 1b       	sub	r30, r16
 15a:	f1 0b       	sbc	r31, r17
 15c:	ce 17       	cp	r28, r30
 15e:	df 07       	cpc	r29, r31
 160:	80 f3       	brcs	.-32     	; 0x142 <uart_sendString+0x16>
		uart_transmit(temp[i]);
	}
}
 162:	df 91       	pop	r29
 164:	cf 91       	pop	r28
 166:	1f 91       	pop	r17
 168:	0f 91       	pop	r16
 16a:	ff 90       	pop	r15
 16c:	ef 90       	pop	r14
 16e:	08 95       	ret

00000170 <wifiDirect_connection>:

/************************************************************************/
/* execute the AT-Commands to establish Wi-Fi Direct connection.        */
/************************************************************************/
void wifiDirect_connection() {
	PORTD ^= (1 << LED_YELLOW);
 170:	9b b1       	in	r25, 0x0b	; 11
 172:	80 e4       	ldi	r24, 0x40	; 64
 174:	89 27       	eor	r24, r25
 176:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	88 e0       	ldi	r24, 0x08	; 8
 17c:	9d e3       	ldi	r25, 0x3D	; 61
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <wifiDirect_connection+0xe>
 186:	00 c0       	rjmp	.+0      	; 0x188 <wifiDirect_connection+0x18>
 188:	00 00       	nop
	_delay_ms(1000);
	uart_sendString(atCom1);
 18a:	88 ea       	ldi	r24, 0xA8	; 168
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 192:	2f e7       	ldi	r18, 0x7F	; 127
 194:	84 e8       	ldi	r24, 0x84	; 132
 196:	9e e1       	ldi	r25, 0x1E	; 30
 198:	21 50       	subi	r18, 0x01	; 1
 19a:	80 40       	sbci	r24, 0x00	; 0
 19c:	90 40       	sbci	r25, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <wifiDirect_connection+0x28>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <wifiDirect_connection+0x32>
 1a2:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom2);
 1a4:	8e e9       	ldi	r24, 0x9E	; 158
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 1ac:	2f e7       	ldi	r18, 0x7F	; 127
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	9e e1       	ldi	r25, 0x1E	; 30
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <wifiDirect_connection+0x42>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <wifiDirect_connection+0x4c>
 1bc:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom3);
 1be:	8c e7       	ldi	r24, 0x7C	; 124
 1c0:	91 e0       	ldi	r25, 0x01	; 1
 1c2:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 1c6:	2f e7       	ldi	r18, 0x7F	; 127
 1c8:	84 e8       	ldi	r24, 0x84	; 132
 1ca:	9e e1       	ldi	r25, 0x1E	; 30
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <wifiDirect_connection+0x5c>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <wifiDirect_connection+0x66>
 1d6:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom4);
 1d8:	83 e3       	ldi	r24, 0x33	; 51
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 1e0:	2f e7       	ldi	r18, 0x7F	; 127
 1e2:	84 e8       	ldi	r24, 0x84	; 132
 1e4:	9e e1       	ldi	r25, 0x1E	; 30
 1e6:	21 50       	subi	r18, 0x01	; 1
 1e8:	80 40       	sbci	r24, 0x00	; 0
 1ea:	90 40       	sbci	r25, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <wifiDirect_connection+0x76>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <wifiDirect_connection+0x80>
 1f0:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom5);
 1f2:	8f e1       	ldi	r24, 0x1F	; 31
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
	PORTD ^= (1 << LED_YELLOW);
 1fa:	9b b1       	in	r25, 0x0b	; 11
 1fc:	80 e4       	ldi	r24, 0x40	; 64
 1fe:	89 27       	eor	r24, r25
 200:	8b b9       	out	0x0b, r24	; 11
 202:	08 95       	ret

00000204 <grp_request>:
}

/************************************************************************/
/* builds/executes AT-Commands for PPD-request an GROUPFORM with macAddress      */
/************************************************************************/
void grp_request() {
 204:	0f 93       	push	r16
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	cd b7       	in	r28, 0x3d	; 61
 20e:	de b7       	in	r29, 0x3e	; 62
 210:	c7 57       	subi	r28, 0x77	; 119
 212:	d1 09       	sbc	r29, r1
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	2a e2       	ldi	r18, 0x2A	; 42
 220:	30 e5       	ldi	r19, 0x50	; 80
 222:	8e ef       	ldi	r24, 0xFE	; 254
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	21 50       	subi	r18, 0x01	; 1
 228:	30 40       	sbci	r19, 0x00	; 0
 22a:	80 40       	sbci	r24, 0x00	; 0
 22c:	90 40       	sbci	r25, 0x00	; 0
 22e:	d9 f7       	brne	.-10     	; 0x226 <grp_request+0x22>
 230:	00 00       	nop
	_delay_ms(5000);
	do 
	{
		
		char ppd[30];
		char p1[] = {"at+p2ppd="};
 232:	ce 01       	movw	r24, r28
 234:	87 59       	subi	r24, 0x97	; 151
 236:	9f 4f       	sbci	r25, 0xFF	; 255
 238:	2a e0       	ldi	r18, 0x0A	; 10
 23a:	e0 ec       	ldi	r30, 0xC0	; 192
 23c:	f1 e0       	ldi	r31, 0x01	; 1
 23e:	dc 01       	movw	r26, r24
 240:	01 90       	ld	r0, Z+
 242:	0d 92       	st	X+, r0
 244:	2a 95       	dec	r18
 246:	e1 f7       	brne	.-8      	; 0x240 <grp_request+0x3c>
		char p2[] = {",0\n\r"};
 248:	9e 01       	movw	r18, r28
 24a:	2d 58       	subi	r18, 0x8D	; 141
 24c:	3f 4f       	sbci	r19, 0xFF	; 255
 24e:	45 e0       	ldi	r20, 0x05	; 5
 250:	e2 ee       	ldi	r30, 0xE2	; 226
 252:	f1 e0       	ldi	r31, 0x01	; 1
 254:	d9 01       	movw	r26, r18
 256:	01 90       	ld	r0, Z+
 258:	0d 92       	st	X+, r0
 25a:	4a 95       	dec	r20
 25c:	e1 f7       	brne	.-8      	; 0x256 <grp_request+0x52>
		sprintf(ppd, "%s%s%s", p1, macAddress, p2);			//add found Mac-Address
 25e:	3f 93       	push	r19
 260:	2f 93       	push	r18
 262:	2d e0       	ldi	r18, 0x0D	; 13
 264:	31 e0       	ldi	r19, 0x01	; 1
 266:	3f 93       	push	r19
 268:	2f 93       	push	r18
 26a:	9f 93       	push	r25
 26c:	8f 93       	push	r24
 26e:	89 eb       	ldi	r24, 0xB9	; 185
 270:	91 e0       	ldi	r25, 0x01	; 1
 272:	9f 93       	push	r25
 274:	8f 93       	push	r24
 276:	8e 01       	movw	r16, r28
 278:	02 5d       	subi	r16, 0xD2	; 210
 27a:	1f 4f       	sbci	r17, 0xFF	; 255
 27c:	1f 93       	push	r17
 27e:	0f 93       	push	r16
 280:	0e 94 ba 02 	call	0x574	; 0x574 <sprintf>
		uart_sendString(ppd);								//ppd request
 284:	c8 01       	movw	r24, r16
 286:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 28a:	2a e2       	ldi	r18, 0x2A	; 42
 28c:	30 e5       	ldi	r19, 0x50	; 80
 28e:	8e ef       	ldi	r24, 0xFE	; 254
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	21 50       	subi	r18, 0x01	; 1
 294:	30 40       	sbci	r19, 0x00	; 0
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	d9 f7       	brne	.-10     	; 0x292 <grp_request+0x8e>
 29c:	00 00       	nop
		_delay_ms(5000);									//wait for safety
		
		char grp_form[45];
		char p3[] = {"at+p2pgrpform="};
 29e:	ce 01       	movw	r24, r28
 2a0:	84 5b       	subi	r24, 0xB4	; 180
 2a2:	9f 4f       	sbci	r25, 0xFF	; 255
 2a4:	2f e0       	ldi	r18, 0x0F	; 15
 2a6:	ea ec       	ldi	r30, 0xCA	; 202
 2a8:	f1 e0       	ldi	r31, 0x01	; 1
 2aa:	dc 01       	movw	r26, r24
 2ac:	01 90       	ld	r0, Z+
 2ae:	0d 92       	st	X+, r0
 2b0:	2a 95       	dec	r18
 2b2:	e1 f7       	brne	.-8      	; 0x2ac <grp_request+0xa8>
		char p4[] = {",6,0,,1,0,0\n\r"};
 2b4:	9e 01       	movw	r18, r28
 2b6:	25 5a       	subi	r18, 0xA5	; 165
 2b8:	3f 4f       	sbci	r19, 0xFF	; 255
 2ba:	4e e0       	ldi	r20, 0x0E	; 14
 2bc:	e9 ed       	ldi	r30, 0xD9	; 217
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	d9 01       	movw	r26, r18
 2c2:	01 90       	ld	r0, Z+
 2c4:	0d 92       	st	X+, r0
 2c6:	4a 95       	dec	r20
 2c8:	e1 f7       	brne	.-8      	; 0x2c2 <grp_request+0xbe>
		sprintf(grp_form, "%s%s%s", p3, macAddress, p4);	//add found Mac-Address
 2ca:	3f 93       	push	r19
 2cc:	2f 93       	push	r18
 2ce:	2d e0       	ldi	r18, 0x0D	; 13
 2d0:	31 e0       	ldi	r19, 0x01	; 1
 2d2:	3f 93       	push	r19
 2d4:	2f 93       	push	r18
 2d6:	9f 93       	push	r25
 2d8:	8f 93       	push	r24
 2da:	89 eb       	ldi	r24, 0xB9	; 185
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	9f 93       	push	r25
 2e0:	8f 93       	push	r24
 2e2:	0d 52       	subi	r16, 0x2D	; 45
 2e4:	11 09       	sbc	r17, r1
 2e6:	1f 93       	push	r17
 2e8:	0f 93       	push	r16
 2ea:	0e 94 ba 02 	call	0x574	; 0x574 <sprintf>
		uart_sendString(grp_form);							//groupform request
 2ee:	c8 01       	movw	r24, r16
 2f0:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 2f4:	2f ef       	ldi	r18, 0xFF	; 255
 2f6:	3a e1       	ldi	r19, 0x1A	; 26
 2f8:	87 eb       	ldi	r24, 0xB7	; 183
 2fa:	21 50       	subi	r18, 0x01	; 1
 2fc:	30 40       	sbci	r19, 0x00	; 0
 2fe:	80 40       	sbci	r24, 0x00	; 0
 300:	e1 f7       	brne	.-8      	; 0x2fa <grp_request+0xf6>
 302:	00 c0       	rjmp	.+0      	; 0x304 <grp_request+0x100>
 304:	00 00       	nop
 306:	0f b6       	in	r0, 0x3f	; 63
 308:	f8 94       	cli
 30a:	de bf       	out	0x3e, r29	; 62
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	cd bf       	out	0x3d, r28	; 61
		_delay_ms(3000);
		return;
	} while (macAddress[0] != '\0');
}
 310:	c9 58       	subi	r28, 0x89	; 137
 312:	df 4f       	sbci	r29, 0xFF	; 255
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	0f 91       	pop	r16
 326:	08 95       	ret

00000328 <tcp_connection>:

/************************************************************************/
/* builds/executes AT+Command for TCP Connection						*/
/************************************************************************/
void tcp_connection() {
 328:	0f 93       	push	r16
 32a:	1f 93       	push	r17
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	cd b7       	in	r28, 0x3d	; 61
 332:	de b7       	in	r29, 0x3e	; 62
 334:	ad 97       	sbiw	r28, 0x2d	; 45
 336:	0f b6       	in	r0, 0x3f	; 63
 338:	f8 94       	cli
 33a:	de bf       	out	0x3e, r29	; 62
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	cd bf       	out	0x3d, r28	; 61
	do 
	{
		uart_sendString("at+ndhcp=1\n\r");					//needed for host_ip
 340:	87 ee       	ldi	r24, 0xE7	; 231
 342:	91 e0       	ldi	r25, 0x01	; 1
 344:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 348:	2f e7       	ldi	r18, 0x7F	; 127
 34a:	84 e8       	ldi	r24, 0x84	; 132
 34c:	9e e1       	ldi	r25, 0x1E	; 30
 34e:	21 50       	subi	r18, 0x01	; 1
 350:	80 40       	sbci	r24, 0x00	; 0
 352:	90 40       	sbci	r25, 0x00	; 0
 354:	e1 f7       	brne	.-8      	; 0x34e <tcp_connection+0x26>
 356:	00 c0       	rjmp	.+0      	; 0x358 <tcp_connection+0x30>
 358:	00 00       	nop
		_delay_ms(500);
		char nct[27];
		char p1[] = {"at+nctcp="};
 35a:	8a e0       	ldi	r24, 0x0A	; 10
 35c:	e4 ef       	ldi	r30, 0xF4	; 244
 35e:	f1 e0       	ldi	r31, 0x01	; 1
 360:	de 01       	movw	r26, r28
 362:	5c 96       	adiw	r26, 0x1c	; 28
 364:	01 90       	ld	r0, Z+
 366:	0d 92       	st	X+, r0
 368:	8a 95       	dec	r24
 36a:	e1 f7       	brne	.-8      	; 0x364 <tcp_connection+0x3c>
		char p2[] = {",8288\n\r"};
 36c:	88 e0       	ldi	r24, 0x08	; 8
 36e:	ee ef       	ldi	r30, 0xFE	; 254
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	de 01       	movw	r26, r28
 374:	96 96       	adiw	r26, 0x26	; 38
 376:	01 90       	ld	r0, Z+
 378:	0d 92       	st	X+, r0
 37a:	8a 95       	dec	r24
 37c:	e1 f7       	brne	.-8      	; 0x376 <tcp_connection+0x4e>
		sprintf(nct, "%s%s%s",p1, host_ip, p2);				//add host_ip
 37e:	ce 01       	movw	r24, r28
 380:	86 96       	adiw	r24, 0x26	; 38
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	91 e0       	ldi	r25, 0x01	; 1
 38a:	9f 93       	push	r25
 38c:	8f 93       	push	r24
 38e:	ce 01       	movw	r24, r28
 390:	4c 96       	adiw	r24, 0x1c	; 28
 392:	9f 93       	push	r25
 394:	8f 93       	push	r24
 396:	89 eb       	ldi	r24, 0xB9	; 185
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	9f 93       	push	r25
 39c:	8f 93       	push	r24
 39e:	8e 01       	movw	r16, r28
 3a0:	0f 5f       	subi	r16, 0xFF	; 255
 3a2:	1f 4f       	sbci	r17, 0xFF	; 255
 3a4:	1f 93       	push	r17
 3a6:	0f 93       	push	r16
 3a8:	0e 94 ba 02 	call	0x574	; 0x574 <sprintf>
		uart_sendString(nct);
 3ac:	c8 01       	movw	r24, r16
 3ae:	0e 94 96 00 	call	0x12c	; 0x12c <uart_sendString>
 3b2:	2f ef       	ldi	r18, 0xFF	; 255
 3b4:	8a e1       	ldi	r24, 0x1A	; 26
 3b6:	97 eb       	ldi	r25, 0xB7	; 183
 3b8:	21 50       	subi	r18, 0x01	; 1
 3ba:	80 40       	sbci	r24, 0x00	; 0
 3bc:	90 40       	sbci	r25, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <tcp_connection+0x90>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <tcp_connection+0x9a>
 3c2:	00 00       	nop
		_delay_ms(3000);
		start_transmission = 1;								//start of Data Transmission
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	90 93 09 02 	sts	0x0209, r25
 3cc:	80 93 08 02 	sts	0x0208, r24
 3d0:	0f b6       	in	r0, 0x3f	; 63
 3d2:	f8 94       	cli
 3d4:	de bf       	out	0x3e, r29	; 62
 3d6:	0f be       	out	0x3f, r0	; 63
 3d8:	cd bf       	out	0x3d, r28	; 61
		return;
	} while (host_ip[0] != '\0');
}
 3da:	ad 96       	adiw	r28, 0x2d	; 45
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	f8 94       	cli
 3e0:	de bf       	out	0x3e, r29	; 62
 3e2:	0f be       	out	0x3f, r0	; 63
 3e4:	cd bf       	out	0x3d, r28	; 61
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <sendDataChar>:
	//sprintf(temp, "%s%c%s", s, tmpChar, p3);
	char esc = 0x1B;
	char S = 0x53;
	char o = 0x30;
	char e = 0x45;
	uart_transmit(esc);
 3f0:	8b e1       	ldi	r24, 0x1B	; 27
 3f2:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
	uart_transmit(S);
 3f6:	83 e5       	ldi	r24, 0x53	; 83
 3f8:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
	uart_transmit(o);
 3fc:	80 e3       	ldi	r24, 0x30	; 48
 3fe:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
	uart_transmit(REC2);
 402:	80 91 6f 02 	lds	r24, 0x026F
 406:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
	uart_transmit(esc);
 40a:	8b e1       	ldi	r24, 0x1B	; 27
 40c:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
	uart_transmit(e);
 410:	85 e4       	ldi	r24, 0x45	; 69
 412:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
	uart_transmit('\n');
 416:	8a e0       	ldi	r24, 0x0A	; 10
 418:	0e 94 8e 00 	call	0x11c	; 0x11c <uart_transmit>
 41c:	08 95       	ret

0000041e <__vector_20>:

/************************************************************************/
/* INTERUPT for UART0													*/
/* Creates String from received Data for finding MAC-Address and Host IP*/
/************************************************************************/
ISR(USART0_RX_vect) {
 41e:	1f 92       	push	r1
 420:	0f 92       	push	r0
 422:	0f b6       	in	r0, 0x3f	; 63
 424:	0f 92       	push	r0
 426:	11 24       	eor	r1, r1
 428:	2f 93       	push	r18
 42a:	3f 93       	push	r19
 42c:	8f 93       	push	r24
 42e:	9f 93       	push	r25
 430:	af 93       	push	r26
 432:	bf 93       	push	r27
 434:	ef 93       	push	r30
 436:	ff 93       	push	r31
	REC = UDR0;
 438:	80 91 c6 00 	lds	r24, 0x00C6
 43c:	80 93 0a 02 	sts	0x020A, r24
	recMsg[msgInt] = REC;
 440:	e0 91 06 02 	lds	r30, 0x0206
 444:	f0 91 07 02 	lds	r31, 0x0207
 448:	80 91 0a 02 	lds	r24, 0x020A
 44c:	e4 58       	subi	r30, 0x84	; 132
 44e:	fd 4f       	sbci	r31, 0xFD	; 253
 450:	80 83       	st	Z, r24
	if(REC == '\n') {
 452:	80 91 0a 02 	lds	r24, 0x020A
 456:	8a 30       	cpi	r24, 0x0A	; 10
 458:	59 f5       	brne	.+86     	; 0x4b0 <__vector_20+0x92>
		recMsg[msgInt++] = '\n';
 45a:	80 91 06 02 	lds	r24, 0x0206
 45e:	90 91 07 02 	lds	r25, 0x0207
 462:	9c 01       	movw	r18, r24
 464:	2f 5f       	subi	r18, 0xFF	; 255
 466:	3f 4f       	sbci	r19, 0xFF	; 255
 468:	30 93 07 02 	sts	0x0207, r19
 46c:	20 93 06 02 	sts	0x0206, r18
 470:	fc 01       	movw	r30, r24
 472:	e4 58       	subi	r30, 0x84	; 132
 474:	fd 4f       	sbci	r31, 0xFD	; 253
 476:	2a e0       	ldi	r18, 0x0A	; 10
 478:	20 83       	st	Z, r18
		recMsg[msgInt++] = '\0';
 47a:	80 91 06 02 	lds	r24, 0x0206
 47e:	90 91 07 02 	lds	r25, 0x0207
 482:	9c 01       	movw	r18, r24
 484:	2f 5f       	subi	r18, 0xFF	; 255
 486:	3f 4f       	sbci	r19, 0xFF	; 255
 488:	30 93 07 02 	sts	0x0207, r19
 48c:	20 93 06 02 	sts	0x0206, r18
 490:	fc 01       	movw	r30, r24
 492:	e4 58       	subi	r30, 0x84	; 132
 494:	fd 4f       	sbci	r31, 0xFD	; 253
 496:	10 82       	st	Z, r1
		msgInt = 0;
 498:	10 92 07 02 	sts	0x0207, r1
 49c:	10 92 06 02 	sts	0x0206, r1
		//get_macAddress(recMsg);
		get_hostIP(recMsg);
		memset(&recMsg[0], 0, sizeof(recMsg));
 4a0:	84 e6       	ldi	r24, 0x64	; 100
 4a2:	ec e7       	ldi	r30, 0x7C	; 124
 4a4:	f2 e0       	ldi	r31, 0x02	; 2
 4a6:	df 01       	movw	r26, r30
 4a8:	1d 92       	st	X+, r1
 4aa:	8a 95       	dec	r24
 4ac:	e9 f7       	brne	.-6      	; 0x4a8 <__vector_20+0x8a>
 4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__vector_20+0xac>
	} else if (REC == '\r')	{
 4b0:	80 91 0a 02 	lds	r24, 0x020A
 4b4:	8d 30       	cpi	r24, 0x0D	; 13
 4b6:	49 f0       	breq	.+18     	; 0x4ca <__vector_20+0xac>
	} else {
		msgInt++;
 4b8:	80 91 06 02 	lds	r24, 0x0206
 4bc:	90 91 07 02 	lds	r25, 0x0207
 4c0:	01 96       	adiw	r24, 0x01	; 1
 4c2:	90 93 07 02 	sts	0x0207, r25
 4c6:	80 93 06 02 	sts	0x0206, r24
	}
}
 4ca:	ff 91       	pop	r31
 4cc:	ef 91       	pop	r30
 4ce:	bf 91       	pop	r27
 4d0:	af 91       	pop	r26
 4d2:	9f 91       	pop	r25
 4d4:	8f 91       	pop	r24
 4d6:	3f 91       	pop	r19
 4d8:	2f 91       	pop	r18
 4da:	0f 90       	pop	r0
 4dc:	0f be       	out	0x3f, r0	; 63
 4de:	0f 90       	pop	r0
 4e0:	1f 90       	pop	r1
 4e2:	18 95       	reti

000004e4 <__vector_28>:

/************************************************************************/
/* INTERUPT for UART1													*/
/************************************************************************/
ISR(USART1_RX_vect) {
 4e4:	1f 92       	push	r1
 4e6:	0f 92       	push	r0
 4e8:	0f b6       	in	r0, 0x3f	; 63
 4ea:	0f 92       	push	r0
 4ec:	11 24       	eor	r1, r1
 4ee:	2f 93       	push	r18
 4f0:	3f 93       	push	r19
 4f2:	4f 93       	push	r20
 4f4:	5f 93       	push	r21
 4f6:	6f 93       	push	r22
 4f8:	7f 93       	push	r23
 4fa:	8f 93       	push	r24
 4fc:	9f 93       	push	r25
 4fe:	af 93       	push	r26
 500:	bf 93       	push	r27
 502:	ef 93       	push	r30
 504:	ff 93       	push	r31
	REC2 = UDR1;
 506:	80 91 ce 00 	lds	r24, 0x00CE
 50a:	80 93 6f 02 	sts	0x026F, r24
	if(start_transmission == 1) {
 50e:	80 91 08 02 	lds	r24, 0x0208
 512:	90 91 09 02 	lds	r25, 0x0209
 516:	01 97       	sbiw	r24, 0x01	; 1
 518:	11 f4       	brne	.+4      	; 0x51e <__vector_28+0x3a>
		//uart_transmit(REC2);
		sendDataChar();
 51a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <sendDataChar>
	}
	REC2 = '\0';
 51e:	10 92 6f 02 	sts	0x026F, r1
}
 522:	ff 91       	pop	r31
 524:	ef 91       	pop	r30
 526:	bf 91       	pop	r27
 528:	af 91       	pop	r26
 52a:	9f 91       	pop	r25
 52c:	8f 91       	pop	r24
 52e:	7f 91       	pop	r23
 530:	6f 91       	pop	r22
 532:	5f 91       	pop	r21
 534:	4f 91       	pop	r20
 536:	3f 91       	pop	r19
 538:	2f 91       	pop	r18
 53a:	0f 90       	pop	r0
 53c:	0f be       	out	0x3f, r0	; 63
 53e:	0f 90       	pop	r0
 540:	1f 90       	pop	r1
 542:	18 95       	reti

00000544 <init_LED>:

/************************************************************************/
/* init for LEDs														*/
/************************************************************************/
void init_LED() {
	DDRD |= (1 << LED_GREEN);
 544:	55 9a       	sbi	0x0a, 5	; 10
	DDRD |= (1 << LED_YELLOW);
 546:	56 9a       	sbi	0x0a, 6	; 10
	DDRD |= (1 << LED_RED);
 548:	57 9a       	sbi	0x0a, 7	; 10
	
	PORTD &= ~(1 << LED_GREEN);
 54a:	5d 98       	cbi	0x0b, 5	; 11
	PORTD &= ~(1 << LED_YELLOW);
 54c:	5e 98       	cbi	0x0b, 6	; 11
	PORTD &= ~(1 << LED_RED);
 54e:	5f 98       	cbi	0x0b, 7	; 11
 550:	08 95       	ret

00000552 <main>:
}


int main(void)
{
	init_LED();
 552:	0e 94 a2 02 	call	0x544	; 0x544 <init_LED>
	
	uart_init();
 556:	0e 94 5d 00 	call	0xba	; 0xba <uart_init>
	uart_init2();
 55a:	0e 94 76 00 	call	0xec	; 0xec <uart_init2>
	
	wifiDirect_connection();
 55e:	0e 94 b8 00 	call	0x170	; 0x170 <wifiDirect_connection>
	grp_request();
 562:	0e 94 02 01 	call	0x204	; 0x204 <grp_request>
	tcp_connection();
 566:	0e 94 94 01 	call	0x328	; 0x328 <tcp_connection>
	
    while(1)
    {
		PORTD ^= (1 << LED_GREEN);				//only needed for testing
 56a:	90 e2       	ldi	r25, 0x20	; 32
 56c:	8b b1       	in	r24, 0x0b	; 11
 56e:	89 27       	eor	r24, r25
 570:	8b b9       	out	0x0b, r24	; 11
 572:	fc cf       	rjmp	.-8      	; 0x56c <main+0x1a>

00000574 <sprintf>:
 574:	ae e0       	ldi	r26, 0x0E	; 14
 576:	b0 e0       	ldi	r27, 0x00	; 0
 578:	e0 ec       	ldi	r30, 0xC0	; 192
 57a:	f2 e0       	ldi	r31, 0x02	; 2
 57c:	0c 94 62 05 	jmp	0xac4	; 0xac4 <__prologue_saves__+0x1c>
 580:	0d 89       	ldd	r16, Y+21	; 0x15
 582:	1e 89       	ldd	r17, Y+22	; 0x16
 584:	86 e0       	ldi	r24, 0x06	; 6
 586:	8c 83       	std	Y+4, r24	; 0x04
 588:	1a 83       	std	Y+2, r17	; 0x02
 58a:	09 83       	std	Y+1, r16	; 0x01
 58c:	8f ef       	ldi	r24, 0xFF	; 255
 58e:	9f e7       	ldi	r25, 0x7F	; 127
 590:	9e 83       	std	Y+6, r25	; 0x06
 592:	8d 83       	std	Y+5, r24	; 0x05
 594:	ae 01       	movw	r20, r28
 596:	47 5e       	subi	r20, 0xE7	; 231
 598:	5f 4f       	sbci	r21, 0xFF	; 255
 59a:	6f 89       	ldd	r22, Y+23	; 0x17
 59c:	78 8d       	ldd	r23, Y+24	; 0x18
 59e:	ce 01       	movw	r24, r28
 5a0:	01 96       	adiw	r24, 0x01	; 1
 5a2:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <vfprintf>
 5a6:	ef 81       	ldd	r30, Y+7	; 0x07
 5a8:	f8 85       	ldd	r31, Y+8	; 0x08
 5aa:	e0 0f       	add	r30, r16
 5ac:	f1 1f       	adc	r31, r17
 5ae:	10 82       	st	Z, r1
 5b0:	2e 96       	adiw	r28, 0x0e	; 14
 5b2:	e4 e0       	ldi	r30, 0x04	; 4
 5b4:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__epilogue_restores__+0x1c>

000005b8 <vfprintf>:
 5b8:	ac e0       	ldi	r26, 0x0C	; 12
 5ba:	b0 e0       	ldi	r27, 0x00	; 0
 5bc:	e2 ee       	ldi	r30, 0xE2	; 226
 5be:	f2 e0       	ldi	r31, 0x02	; 2
 5c0:	0c 94 54 05 	jmp	0xaa8	; 0xaa8 <__prologue_saves__>
 5c4:	7c 01       	movw	r14, r24
 5c6:	6b 01       	movw	r12, r22
 5c8:	8a 01       	movw	r16, r20
 5ca:	fc 01       	movw	r30, r24
 5cc:	17 82       	std	Z+7, r1	; 0x07
 5ce:	16 82       	std	Z+6, r1	; 0x06
 5d0:	83 81       	ldd	r24, Z+3	; 0x03
 5d2:	81 ff       	sbrs	r24, 1
 5d4:	bd c1       	rjmp	.+890    	; 0x950 <vfprintf+0x398>
 5d6:	ce 01       	movw	r24, r28
 5d8:	01 96       	adiw	r24, 0x01	; 1
 5da:	4c 01       	movw	r8, r24
 5dc:	f7 01       	movw	r30, r14
 5de:	93 81       	ldd	r25, Z+3	; 0x03
 5e0:	f6 01       	movw	r30, r12
 5e2:	93 fd       	sbrc	r25, 3
 5e4:	85 91       	lpm	r24, Z+
 5e6:	93 ff       	sbrs	r25, 3
 5e8:	81 91       	ld	r24, Z+
 5ea:	6f 01       	movw	r12, r30
 5ec:	88 23       	and	r24, r24
 5ee:	09 f4       	brne	.+2      	; 0x5f2 <vfprintf+0x3a>
 5f0:	ab c1       	rjmp	.+854    	; 0x948 <vfprintf+0x390>
 5f2:	85 32       	cpi	r24, 0x25	; 37
 5f4:	39 f4       	brne	.+14     	; 0x604 <vfprintf+0x4c>
 5f6:	93 fd       	sbrc	r25, 3
 5f8:	85 91       	lpm	r24, Z+
 5fa:	93 ff       	sbrs	r25, 3
 5fc:	81 91       	ld	r24, Z+
 5fe:	6f 01       	movw	r12, r30
 600:	85 32       	cpi	r24, 0x25	; 37
 602:	29 f4       	brne	.+10     	; 0x60e <vfprintf+0x56>
 604:	b7 01       	movw	r22, r14
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 60c:	e7 cf       	rjmp	.-50     	; 0x5dc <vfprintf+0x24>
 60e:	51 2c       	mov	r5, r1
 610:	31 2c       	mov	r3, r1
 612:	20 e0       	ldi	r18, 0x00	; 0
 614:	20 32       	cpi	r18, 0x20	; 32
 616:	a0 f4       	brcc	.+40     	; 0x640 <vfprintf+0x88>
 618:	8b 32       	cpi	r24, 0x2B	; 43
 61a:	69 f0       	breq	.+26     	; 0x636 <vfprintf+0x7e>
 61c:	30 f4       	brcc	.+12     	; 0x62a <vfprintf+0x72>
 61e:	80 32       	cpi	r24, 0x20	; 32
 620:	59 f0       	breq	.+22     	; 0x638 <vfprintf+0x80>
 622:	83 32       	cpi	r24, 0x23	; 35
 624:	69 f4       	brne	.+26     	; 0x640 <vfprintf+0x88>
 626:	20 61       	ori	r18, 0x10	; 16
 628:	2c c0       	rjmp	.+88     	; 0x682 <vfprintf+0xca>
 62a:	8d 32       	cpi	r24, 0x2D	; 45
 62c:	39 f0       	breq	.+14     	; 0x63c <vfprintf+0x84>
 62e:	80 33       	cpi	r24, 0x30	; 48
 630:	39 f4       	brne	.+14     	; 0x640 <vfprintf+0x88>
 632:	21 60       	ori	r18, 0x01	; 1
 634:	26 c0       	rjmp	.+76     	; 0x682 <vfprintf+0xca>
 636:	22 60       	ori	r18, 0x02	; 2
 638:	24 60       	ori	r18, 0x04	; 4
 63a:	23 c0       	rjmp	.+70     	; 0x682 <vfprintf+0xca>
 63c:	28 60       	ori	r18, 0x08	; 8
 63e:	21 c0       	rjmp	.+66     	; 0x682 <vfprintf+0xca>
 640:	27 fd       	sbrc	r18, 7
 642:	27 c0       	rjmp	.+78     	; 0x692 <vfprintf+0xda>
 644:	30 ed       	ldi	r19, 0xD0	; 208
 646:	38 0f       	add	r19, r24
 648:	3a 30       	cpi	r19, 0x0A	; 10
 64a:	78 f4       	brcc	.+30     	; 0x66a <vfprintf+0xb2>
 64c:	26 ff       	sbrs	r18, 6
 64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0xa4>
 650:	fa e0       	ldi	r31, 0x0A	; 10
 652:	5f 9e       	mul	r5, r31
 654:	30 0d       	add	r19, r0
 656:	11 24       	eor	r1, r1
 658:	53 2e       	mov	r5, r19
 65a:	13 c0       	rjmp	.+38     	; 0x682 <vfprintf+0xca>
 65c:	8a e0       	ldi	r24, 0x0A	; 10
 65e:	38 9e       	mul	r3, r24
 660:	30 0d       	add	r19, r0
 662:	11 24       	eor	r1, r1
 664:	33 2e       	mov	r3, r19
 666:	20 62       	ori	r18, 0x20	; 32
 668:	0c c0       	rjmp	.+24     	; 0x682 <vfprintf+0xca>
 66a:	8e 32       	cpi	r24, 0x2E	; 46
 66c:	21 f4       	brne	.+8      	; 0x676 <vfprintf+0xbe>
 66e:	26 fd       	sbrc	r18, 6
 670:	6b c1       	rjmp	.+726    	; 0x948 <vfprintf+0x390>
 672:	20 64       	ori	r18, 0x40	; 64
 674:	06 c0       	rjmp	.+12     	; 0x682 <vfprintf+0xca>
 676:	8c 36       	cpi	r24, 0x6C	; 108
 678:	11 f4       	brne	.+4      	; 0x67e <vfprintf+0xc6>
 67a:	20 68       	ori	r18, 0x80	; 128
 67c:	02 c0       	rjmp	.+4      	; 0x682 <vfprintf+0xca>
 67e:	88 36       	cpi	r24, 0x68	; 104
 680:	41 f4       	brne	.+16     	; 0x692 <vfprintf+0xda>
 682:	f6 01       	movw	r30, r12
 684:	93 fd       	sbrc	r25, 3
 686:	85 91       	lpm	r24, Z+
 688:	93 ff       	sbrs	r25, 3
 68a:	81 91       	ld	r24, Z+
 68c:	6f 01       	movw	r12, r30
 68e:	81 11       	cpse	r24, r1
 690:	c1 cf       	rjmp	.-126    	; 0x614 <vfprintf+0x5c>
 692:	98 2f       	mov	r25, r24
 694:	9f 7d       	andi	r25, 0xDF	; 223
 696:	95 54       	subi	r25, 0x45	; 69
 698:	93 30       	cpi	r25, 0x03	; 3
 69a:	28 f4       	brcc	.+10     	; 0x6a6 <vfprintf+0xee>
 69c:	0c 5f       	subi	r16, 0xFC	; 252
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	ff e3       	ldi	r31, 0x3F	; 63
 6a2:	f9 83       	std	Y+1, r31	; 0x01
 6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <vfprintf+0x108>
 6a6:	83 36       	cpi	r24, 0x63	; 99
 6a8:	31 f0       	breq	.+12     	; 0x6b6 <vfprintf+0xfe>
 6aa:	83 37       	cpi	r24, 0x73	; 115
 6ac:	71 f0       	breq	.+28     	; 0x6ca <vfprintf+0x112>
 6ae:	83 35       	cpi	r24, 0x53	; 83
 6b0:	09 f0       	breq	.+2      	; 0x6b4 <vfprintf+0xfc>
 6b2:	5b c0       	rjmp	.+182    	; 0x76a <vfprintf+0x1b2>
 6b4:	22 c0       	rjmp	.+68     	; 0x6fa <vfprintf+0x142>
 6b6:	f8 01       	movw	r30, r16
 6b8:	80 81       	ld	r24, Z
 6ba:	89 83       	std	Y+1, r24	; 0x01
 6bc:	0e 5f       	subi	r16, 0xFE	; 254
 6be:	1f 4f       	sbci	r17, 0xFF	; 255
 6c0:	44 24       	eor	r4, r4
 6c2:	43 94       	inc	r4
 6c4:	51 2c       	mov	r5, r1
 6c6:	54 01       	movw	r10, r8
 6c8:	15 c0       	rjmp	.+42     	; 0x6f4 <vfprintf+0x13c>
 6ca:	38 01       	movw	r6, r16
 6cc:	f2 e0       	ldi	r31, 0x02	; 2
 6ce:	6f 0e       	add	r6, r31
 6d0:	71 1c       	adc	r7, r1
 6d2:	f8 01       	movw	r30, r16
 6d4:	a0 80       	ld	r10, Z
 6d6:	b1 80       	ldd	r11, Z+1	; 0x01
 6d8:	26 ff       	sbrs	r18, 6
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <vfprintf+0x12a>
 6dc:	65 2d       	mov	r22, r5
 6de:	70 e0       	ldi	r23, 0x00	; 0
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <vfprintf+0x12e>
 6e2:	6f ef       	ldi	r22, 0xFF	; 255
 6e4:	7f ef       	ldi	r23, 0xFF	; 255
 6e6:	c5 01       	movw	r24, r10
 6e8:	2c 87       	std	Y+12, r18	; 0x0c
 6ea:	0e 94 b9 04 	call	0x972	; 0x972 <strnlen>
 6ee:	2c 01       	movw	r4, r24
 6f0:	83 01       	movw	r16, r6
 6f2:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f4:	2f 77       	andi	r18, 0x7F	; 127
 6f6:	22 2e       	mov	r2, r18
 6f8:	17 c0       	rjmp	.+46     	; 0x728 <vfprintf+0x170>
 6fa:	38 01       	movw	r6, r16
 6fc:	f2 e0       	ldi	r31, 0x02	; 2
 6fe:	6f 0e       	add	r6, r31
 700:	71 1c       	adc	r7, r1
 702:	f8 01       	movw	r30, r16
 704:	a0 80       	ld	r10, Z
 706:	b1 80       	ldd	r11, Z+1	; 0x01
 708:	26 ff       	sbrs	r18, 6
 70a:	03 c0       	rjmp	.+6      	; 0x712 <vfprintf+0x15a>
 70c:	65 2d       	mov	r22, r5
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	02 c0       	rjmp	.+4      	; 0x716 <vfprintf+0x15e>
 712:	6f ef       	ldi	r22, 0xFF	; 255
 714:	7f ef       	ldi	r23, 0xFF	; 255
 716:	c5 01       	movw	r24, r10
 718:	2c 87       	std	Y+12, r18	; 0x0c
 71a:	0e 94 ae 04 	call	0x95c	; 0x95c <strnlen_P>
 71e:	2c 01       	movw	r4, r24
 720:	2c 85       	ldd	r18, Y+12	; 0x0c
 722:	20 68       	ori	r18, 0x80	; 128
 724:	22 2e       	mov	r2, r18
 726:	83 01       	movw	r16, r6
 728:	23 fc       	sbrc	r2, 3
 72a:	1b c0       	rjmp	.+54     	; 0x762 <vfprintf+0x1aa>
 72c:	83 2d       	mov	r24, r3
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	48 16       	cp	r4, r24
 732:	59 06       	cpc	r5, r25
 734:	b0 f4       	brcc	.+44     	; 0x762 <vfprintf+0x1aa>
 736:	b7 01       	movw	r22, r14
 738:	80 e2       	ldi	r24, 0x20	; 32
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 740:	3a 94       	dec	r3
 742:	f4 cf       	rjmp	.-24     	; 0x72c <vfprintf+0x174>
 744:	f5 01       	movw	r30, r10
 746:	27 fc       	sbrc	r2, 7
 748:	85 91       	lpm	r24, Z+
 74a:	27 fe       	sbrs	r2, 7
 74c:	81 91       	ld	r24, Z+
 74e:	5f 01       	movw	r10, r30
 750:	b7 01       	movw	r22, r14
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 758:	31 10       	cpse	r3, r1
 75a:	3a 94       	dec	r3
 75c:	f1 e0       	ldi	r31, 0x01	; 1
 75e:	4f 1a       	sub	r4, r31
 760:	51 08       	sbc	r5, r1
 762:	41 14       	cp	r4, r1
 764:	51 04       	cpc	r5, r1
 766:	71 f7       	brne	.-36     	; 0x744 <vfprintf+0x18c>
 768:	e5 c0       	rjmp	.+458    	; 0x934 <vfprintf+0x37c>
 76a:	84 36       	cpi	r24, 0x64	; 100
 76c:	11 f0       	breq	.+4      	; 0x772 <vfprintf+0x1ba>
 76e:	89 36       	cpi	r24, 0x69	; 105
 770:	39 f5       	brne	.+78     	; 0x7c0 <vfprintf+0x208>
 772:	f8 01       	movw	r30, r16
 774:	27 ff       	sbrs	r18, 7
 776:	07 c0       	rjmp	.+14     	; 0x786 <vfprintf+0x1ce>
 778:	60 81       	ld	r22, Z
 77a:	71 81       	ldd	r23, Z+1	; 0x01
 77c:	82 81       	ldd	r24, Z+2	; 0x02
 77e:	93 81       	ldd	r25, Z+3	; 0x03
 780:	0c 5f       	subi	r16, 0xFC	; 252
 782:	1f 4f       	sbci	r17, 0xFF	; 255
 784:	08 c0       	rjmp	.+16     	; 0x796 <vfprintf+0x1de>
 786:	60 81       	ld	r22, Z
 788:	71 81       	ldd	r23, Z+1	; 0x01
 78a:	88 27       	eor	r24, r24
 78c:	77 fd       	sbrc	r23, 7
 78e:	80 95       	com	r24
 790:	98 2f       	mov	r25, r24
 792:	0e 5f       	subi	r16, 0xFE	; 254
 794:	1f 4f       	sbci	r17, 0xFF	; 255
 796:	2f 76       	andi	r18, 0x6F	; 111
 798:	b2 2e       	mov	r11, r18
 79a:	97 ff       	sbrs	r25, 7
 79c:	09 c0       	rjmp	.+18     	; 0x7b0 <vfprintf+0x1f8>
 79e:	90 95       	com	r25
 7a0:	80 95       	com	r24
 7a2:	70 95       	com	r23
 7a4:	61 95       	neg	r22
 7a6:	7f 4f       	sbci	r23, 0xFF	; 255
 7a8:	8f 4f       	sbci	r24, 0xFF	; 255
 7aa:	9f 4f       	sbci	r25, 0xFF	; 255
 7ac:	20 68       	ori	r18, 0x80	; 128
 7ae:	b2 2e       	mov	r11, r18
 7b0:	2a e0       	ldi	r18, 0x0A	; 10
 7b2:	30 e0       	ldi	r19, 0x00	; 0
 7b4:	a4 01       	movw	r20, r8
 7b6:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__ultoa_invert>
 7ba:	a8 2e       	mov	r10, r24
 7bc:	a8 18       	sub	r10, r8
 7be:	44 c0       	rjmp	.+136    	; 0x848 <vfprintf+0x290>
 7c0:	85 37       	cpi	r24, 0x75	; 117
 7c2:	29 f4       	brne	.+10     	; 0x7ce <vfprintf+0x216>
 7c4:	2f 7e       	andi	r18, 0xEF	; 239
 7c6:	b2 2e       	mov	r11, r18
 7c8:	2a e0       	ldi	r18, 0x0A	; 10
 7ca:	30 e0       	ldi	r19, 0x00	; 0
 7cc:	25 c0       	rjmp	.+74     	; 0x818 <vfprintf+0x260>
 7ce:	f2 2f       	mov	r31, r18
 7d0:	f9 7f       	andi	r31, 0xF9	; 249
 7d2:	bf 2e       	mov	r11, r31
 7d4:	8f 36       	cpi	r24, 0x6F	; 111
 7d6:	c1 f0       	breq	.+48     	; 0x808 <vfprintf+0x250>
 7d8:	18 f4       	brcc	.+6      	; 0x7e0 <vfprintf+0x228>
 7da:	88 35       	cpi	r24, 0x58	; 88
 7dc:	79 f0       	breq	.+30     	; 0x7fc <vfprintf+0x244>
 7de:	b4 c0       	rjmp	.+360    	; 0x948 <vfprintf+0x390>
 7e0:	80 37       	cpi	r24, 0x70	; 112
 7e2:	19 f0       	breq	.+6      	; 0x7ea <vfprintf+0x232>
 7e4:	88 37       	cpi	r24, 0x78	; 120
 7e6:	21 f0       	breq	.+8      	; 0x7f0 <vfprintf+0x238>
 7e8:	af c0       	rjmp	.+350    	; 0x948 <vfprintf+0x390>
 7ea:	2f 2f       	mov	r18, r31
 7ec:	20 61       	ori	r18, 0x10	; 16
 7ee:	b2 2e       	mov	r11, r18
 7f0:	b4 fe       	sbrs	r11, 4
 7f2:	0d c0       	rjmp	.+26     	; 0x80e <vfprintf+0x256>
 7f4:	8b 2d       	mov	r24, r11
 7f6:	84 60       	ori	r24, 0x04	; 4
 7f8:	b8 2e       	mov	r11, r24
 7fa:	09 c0       	rjmp	.+18     	; 0x80e <vfprintf+0x256>
 7fc:	24 ff       	sbrs	r18, 4
 7fe:	0a c0       	rjmp	.+20     	; 0x814 <vfprintf+0x25c>
 800:	9f 2f       	mov	r25, r31
 802:	96 60       	ori	r25, 0x06	; 6
 804:	b9 2e       	mov	r11, r25
 806:	06 c0       	rjmp	.+12     	; 0x814 <vfprintf+0x25c>
 808:	28 e0       	ldi	r18, 0x08	; 8
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	05 c0       	rjmp	.+10     	; 0x818 <vfprintf+0x260>
 80e:	20 e1       	ldi	r18, 0x10	; 16
 810:	30 e0       	ldi	r19, 0x00	; 0
 812:	02 c0       	rjmp	.+4      	; 0x818 <vfprintf+0x260>
 814:	20 e1       	ldi	r18, 0x10	; 16
 816:	32 e0       	ldi	r19, 0x02	; 2
 818:	f8 01       	movw	r30, r16
 81a:	b7 fe       	sbrs	r11, 7
 81c:	07 c0       	rjmp	.+14     	; 0x82c <vfprintf+0x274>
 81e:	60 81       	ld	r22, Z
 820:	71 81       	ldd	r23, Z+1	; 0x01
 822:	82 81       	ldd	r24, Z+2	; 0x02
 824:	93 81       	ldd	r25, Z+3	; 0x03
 826:	0c 5f       	subi	r16, 0xFC	; 252
 828:	1f 4f       	sbci	r17, 0xFF	; 255
 82a:	06 c0       	rjmp	.+12     	; 0x838 <vfprintf+0x280>
 82c:	60 81       	ld	r22, Z
 82e:	71 81       	ldd	r23, Z+1	; 0x01
 830:	80 e0       	ldi	r24, 0x00	; 0
 832:	90 e0       	ldi	r25, 0x00	; 0
 834:	0e 5f       	subi	r16, 0xFE	; 254
 836:	1f 4f       	sbci	r17, 0xFF	; 255
 838:	a4 01       	movw	r20, r8
 83a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__ultoa_invert>
 83e:	a8 2e       	mov	r10, r24
 840:	a8 18       	sub	r10, r8
 842:	fb 2d       	mov	r31, r11
 844:	ff 77       	andi	r31, 0x7F	; 127
 846:	bf 2e       	mov	r11, r31
 848:	b6 fe       	sbrs	r11, 6
 84a:	0b c0       	rjmp	.+22     	; 0x862 <vfprintf+0x2aa>
 84c:	2b 2d       	mov	r18, r11
 84e:	2e 7f       	andi	r18, 0xFE	; 254
 850:	a5 14       	cp	r10, r5
 852:	50 f4       	brcc	.+20     	; 0x868 <vfprintf+0x2b0>
 854:	b4 fe       	sbrs	r11, 4
 856:	0a c0       	rjmp	.+20     	; 0x86c <vfprintf+0x2b4>
 858:	b2 fc       	sbrc	r11, 2
 85a:	08 c0       	rjmp	.+16     	; 0x86c <vfprintf+0x2b4>
 85c:	2b 2d       	mov	r18, r11
 85e:	2e 7e       	andi	r18, 0xEE	; 238
 860:	05 c0       	rjmp	.+10     	; 0x86c <vfprintf+0x2b4>
 862:	7a 2c       	mov	r7, r10
 864:	2b 2d       	mov	r18, r11
 866:	03 c0       	rjmp	.+6      	; 0x86e <vfprintf+0x2b6>
 868:	7a 2c       	mov	r7, r10
 86a:	01 c0       	rjmp	.+2      	; 0x86e <vfprintf+0x2b6>
 86c:	75 2c       	mov	r7, r5
 86e:	24 ff       	sbrs	r18, 4
 870:	0d c0       	rjmp	.+26     	; 0x88c <vfprintf+0x2d4>
 872:	fe 01       	movw	r30, r28
 874:	ea 0d       	add	r30, r10
 876:	f1 1d       	adc	r31, r1
 878:	80 81       	ld	r24, Z
 87a:	80 33       	cpi	r24, 0x30	; 48
 87c:	11 f4       	brne	.+4      	; 0x882 <vfprintf+0x2ca>
 87e:	29 7e       	andi	r18, 0xE9	; 233
 880:	09 c0       	rjmp	.+18     	; 0x894 <vfprintf+0x2dc>
 882:	22 ff       	sbrs	r18, 2
 884:	06 c0       	rjmp	.+12     	; 0x892 <vfprintf+0x2da>
 886:	73 94       	inc	r7
 888:	73 94       	inc	r7
 88a:	04 c0       	rjmp	.+8      	; 0x894 <vfprintf+0x2dc>
 88c:	82 2f       	mov	r24, r18
 88e:	86 78       	andi	r24, 0x86	; 134
 890:	09 f0       	breq	.+2      	; 0x894 <vfprintf+0x2dc>
 892:	73 94       	inc	r7
 894:	23 fd       	sbrc	r18, 3
 896:	13 c0       	rjmp	.+38     	; 0x8be <vfprintf+0x306>
 898:	20 ff       	sbrs	r18, 0
 89a:	06 c0       	rjmp	.+12     	; 0x8a8 <vfprintf+0x2f0>
 89c:	5a 2c       	mov	r5, r10
 89e:	73 14       	cp	r7, r3
 8a0:	18 f4       	brcc	.+6      	; 0x8a8 <vfprintf+0x2f0>
 8a2:	53 0c       	add	r5, r3
 8a4:	57 18       	sub	r5, r7
 8a6:	73 2c       	mov	r7, r3
 8a8:	73 14       	cp	r7, r3
 8aa:	68 f4       	brcc	.+26     	; 0x8c6 <vfprintf+0x30e>
 8ac:	b7 01       	movw	r22, r14
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	2c 87       	std	Y+12, r18	; 0x0c
 8b4:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 8b8:	73 94       	inc	r7
 8ba:	2c 85       	ldd	r18, Y+12	; 0x0c
 8bc:	f5 cf       	rjmp	.-22     	; 0x8a8 <vfprintf+0x2f0>
 8be:	73 14       	cp	r7, r3
 8c0:	10 f4       	brcc	.+4      	; 0x8c6 <vfprintf+0x30e>
 8c2:	37 18       	sub	r3, r7
 8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <vfprintf+0x310>
 8c6:	31 2c       	mov	r3, r1
 8c8:	24 ff       	sbrs	r18, 4
 8ca:	12 c0       	rjmp	.+36     	; 0x8f0 <vfprintf+0x338>
 8cc:	b7 01       	movw	r22, r14
 8ce:	80 e3       	ldi	r24, 0x30	; 48
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	2c 87       	std	Y+12, r18	; 0x0c
 8d4:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 8d8:	2c 85       	ldd	r18, Y+12	; 0x0c
 8da:	22 ff       	sbrs	r18, 2
 8dc:	17 c0       	rjmp	.+46     	; 0x90c <vfprintf+0x354>
 8de:	21 ff       	sbrs	r18, 1
 8e0:	03 c0       	rjmp	.+6      	; 0x8e8 <vfprintf+0x330>
 8e2:	88 e5       	ldi	r24, 0x58	; 88
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <vfprintf+0x334>
 8e8:	88 e7       	ldi	r24, 0x78	; 120
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	b7 01       	movw	r22, r14
 8ee:	0c c0       	rjmp	.+24     	; 0x908 <vfprintf+0x350>
 8f0:	82 2f       	mov	r24, r18
 8f2:	86 78       	andi	r24, 0x86	; 134
 8f4:	59 f0       	breq	.+22     	; 0x90c <vfprintf+0x354>
 8f6:	21 fd       	sbrc	r18, 1
 8f8:	02 c0       	rjmp	.+4      	; 0x8fe <vfprintf+0x346>
 8fa:	80 e2       	ldi	r24, 0x20	; 32
 8fc:	01 c0       	rjmp	.+2      	; 0x900 <vfprintf+0x348>
 8fe:	8b e2       	ldi	r24, 0x2B	; 43
 900:	27 fd       	sbrc	r18, 7
 902:	8d e2       	ldi	r24, 0x2D	; 45
 904:	b7 01       	movw	r22, r14
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 90c:	a5 14       	cp	r10, r5
 90e:	38 f4       	brcc	.+14     	; 0x91e <vfprintf+0x366>
 910:	b7 01       	movw	r22, r14
 912:	80 e3       	ldi	r24, 0x30	; 48
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 91a:	5a 94       	dec	r5
 91c:	f7 cf       	rjmp	.-18     	; 0x90c <vfprintf+0x354>
 91e:	aa 94       	dec	r10
 920:	f4 01       	movw	r30, r8
 922:	ea 0d       	add	r30, r10
 924:	f1 1d       	adc	r31, r1
 926:	80 81       	ld	r24, Z
 928:	b7 01       	movw	r22, r14
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 930:	a1 10       	cpse	r10, r1
 932:	f5 cf       	rjmp	.-22     	; 0x91e <vfprintf+0x366>
 934:	33 20       	and	r3, r3
 936:	09 f4       	brne	.+2      	; 0x93a <vfprintf+0x382>
 938:	51 ce       	rjmp	.-862    	; 0x5dc <vfprintf+0x24>
 93a:	b7 01       	movw	r22, r14
 93c:	80 e2       	ldi	r24, 0x20	; 32
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0e 94 c4 04 	call	0x988	; 0x988 <fputc>
 944:	3a 94       	dec	r3
 946:	f6 cf       	rjmp	.-20     	; 0x934 <vfprintf+0x37c>
 948:	f7 01       	movw	r30, r14
 94a:	86 81       	ldd	r24, Z+6	; 0x06
 94c:	97 81       	ldd	r25, Z+7	; 0x07
 94e:	02 c0       	rjmp	.+4      	; 0x954 <vfprintf+0x39c>
 950:	8f ef       	ldi	r24, 0xFF	; 255
 952:	9f ef       	ldi	r25, 0xFF	; 255
 954:	2c 96       	adiw	r28, 0x0c	; 12
 956:	e2 e1       	ldi	r30, 0x12	; 18
 958:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__epilogue_restores__>

0000095c <strnlen_P>:
 95c:	fc 01       	movw	r30, r24
 95e:	05 90       	lpm	r0, Z+
 960:	61 50       	subi	r22, 0x01	; 1
 962:	70 40       	sbci	r23, 0x00	; 0
 964:	01 10       	cpse	r0, r1
 966:	d8 f7       	brcc	.-10     	; 0x95e <strnlen_P+0x2>
 968:	80 95       	com	r24
 96a:	90 95       	com	r25
 96c:	8e 0f       	add	r24, r30
 96e:	9f 1f       	adc	r25, r31
 970:	08 95       	ret

00000972 <strnlen>:
 972:	fc 01       	movw	r30, r24
 974:	61 50       	subi	r22, 0x01	; 1
 976:	70 40       	sbci	r23, 0x00	; 0
 978:	01 90       	ld	r0, Z+
 97a:	01 10       	cpse	r0, r1
 97c:	d8 f7       	brcc	.-10     	; 0x974 <strnlen+0x2>
 97e:	80 95       	com	r24
 980:	90 95       	com	r25
 982:	8e 0f       	add	r24, r30
 984:	9f 1f       	adc	r25, r31
 986:	08 95       	ret

00000988 <fputc>:
 988:	0f 93       	push	r16
 98a:	1f 93       	push	r17
 98c:	cf 93       	push	r28
 98e:	df 93       	push	r29
 990:	18 2f       	mov	r17, r24
 992:	09 2f       	mov	r16, r25
 994:	eb 01       	movw	r28, r22
 996:	8b 81       	ldd	r24, Y+3	; 0x03
 998:	81 fd       	sbrc	r24, 1
 99a:	03 c0       	rjmp	.+6      	; 0x9a2 <fputc+0x1a>
 99c:	8f ef       	ldi	r24, 0xFF	; 255
 99e:	9f ef       	ldi	r25, 0xFF	; 255
 9a0:	20 c0       	rjmp	.+64     	; 0x9e2 <fputc+0x5a>
 9a2:	82 ff       	sbrs	r24, 2
 9a4:	10 c0       	rjmp	.+32     	; 0x9c6 <fputc+0x3e>
 9a6:	4e 81       	ldd	r20, Y+6	; 0x06
 9a8:	5f 81       	ldd	r21, Y+7	; 0x07
 9aa:	2c 81       	ldd	r18, Y+4	; 0x04
 9ac:	3d 81       	ldd	r19, Y+5	; 0x05
 9ae:	42 17       	cp	r20, r18
 9b0:	53 07       	cpc	r21, r19
 9b2:	7c f4       	brge	.+30     	; 0x9d2 <fputc+0x4a>
 9b4:	e8 81       	ld	r30, Y
 9b6:	f9 81       	ldd	r31, Y+1	; 0x01
 9b8:	9f 01       	movw	r18, r30
 9ba:	2f 5f       	subi	r18, 0xFF	; 255
 9bc:	3f 4f       	sbci	r19, 0xFF	; 255
 9be:	39 83       	std	Y+1, r19	; 0x01
 9c0:	28 83       	st	Y, r18
 9c2:	10 83       	st	Z, r17
 9c4:	06 c0       	rjmp	.+12     	; 0x9d2 <fputc+0x4a>
 9c6:	e8 85       	ldd	r30, Y+8	; 0x08
 9c8:	f9 85       	ldd	r31, Y+9	; 0x09
 9ca:	81 2f       	mov	r24, r17
 9cc:	09 95       	icall
 9ce:	89 2b       	or	r24, r25
 9d0:	29 f7       	brne	.-54     	; 0x99c <fputc+0x14>
 9d2:	2e 81       	ldd	r18, Y+6	; 0x06
 9d4:	3f 81       	ldd	r19, Y+7	; 0x07
 9d6:	2f 5f       	subi	r18, 0xFF	; 255
 9d8:	3f 4f       	sbci	r19, 0xFF	; 255
 9da:	3f 83       	std	Y+7, r19	; 0x07
 9dc:	2e 83       	std	Y+6, r18	; 0x06
 9de:	81 2f       	mov	r24, r17
 9e0:	90 2f       	mov	r25, r16
 9e2:	df 91       	pop	r29
 9e4:	cf 91       	pop	r28
 9e6:	1f 91       	pop	r17
 9e8:	0f 91       	pop	r16
 9ea:	08 95       	ret

000009ec <__ultoa_invert>:
 9ec:	fa 01       	movw	r30, r20
 9ee:	aa 27       	eor	r26, r26
 9f0:	28 30       	cpi	r18, 0x08	; 8
 9f2:	51 f1       	breq	.+84     	; 0xa48 <__ultoa_invert+0x5c>
 9f4:	20 31       	cpi	r18, 0x10	; 16
 9f6:	81 f1       	breq	.+96     	; 0xa58 <__ultoa_invert+0x6c>
 9f8:	e8 94       	clt
 9fa:	6f 93       	push	r22
 9fc:	6e 7f       	andi	r22, 0xFE	; 254
 9fe:	6e 5f       	subi	r22, 0xFE	; 254
 a00:	7f 4f       	sbci	r23, 0xFF	; 255
 a02:	8f 4f       	sbci	r24, 0xFF	; 255
 a04:	9f 4f       	sbci	r25, 0xFF	; 255
 a06:	af 4f       	sbci	r26, 0xFF	; 255
 a08:	b1 e0       	ldi	r27, 0x01	; 1
 a0a:	3e d0       	rcall	.+124    	; 0xa88 <__ultoa_invert+0x9c>
 a0c:	b4 e0       	ldi	r27, 0x04	; 4
 a0e:	3c d0       	rcall	.+120    	; 0xa88 <__ultoa_invert+0x9c>
 a10:	67 0f       	add	r22, r23
 a12:	78 1f       	adc	r23, r24
 a14:	89 1f       	adc	r24, r25
 a16:	9a 1f       	adc	r25, r26
 a18:	a1 1d       	adc	r26, r1
 a1a:	68 0f       	add	r22, r24
 a1c:	79 1f       	adc	r23, r25
 a1e:	8a 1f       	adc	r24, r26
 a20:	91 1d       	adc	r25, r1
 a22:	a1 1d       	adc	r26, r1
 a24:	6a 0f       	add	r22, r26
 a26:	71 1d       	adc	r23, r1
 a28:	81 1d       	adc	r24, r1
 a2a:	91 1d       	adc	r25, r1
 a2c:	a1 1d       	adc	r26, r1
 a2e:	20 d0       	rcall	.+64     	; 0xa70 <__ultoa_invert+0x84>
 a30:	09 f4       	brne	.+2      	; 0xa34 <__ultoa_invert+0x48>
 a32:	68 94       	set
 a34:	3f 91       	pop	r19
 a36:	2a e0       	ldi	r18, 0x0A	; 10
 a38:	26 9f       	mul	r18, r22
 a3a:	11 24       	eor	r1, r1
 a3c:	30 19       	sub	r19, r0
 a3e:	30 5d       	subi	r19, 0xD0	; 208
 a40:	31 93       	st	Z+, r19
 a42:	de f6       	brtc	.-74     	; 0x9fa <__ultoa_invert+0xe>
 a44:	cf 01       	movw	r24, r30
 a46:	08 95       	ret
 a48:	46 2f       	mov	r20, r22
 a4a:	47 70       	andi	r20, 0x07	; 7
 a4c:	40 5d       	subi	r20, 0xD0	; 208
 a4e:	41 93       	st	Z+, r20
 a50:	b3 e0       	ldi	r27, 0x03	; 3
 a52:	0f d0       	rcall	.+30     	; 0xa72 <__ultoa_invert+0x86>
 a54:	c9 f7       	brne	.-14     	; 0xa48 <__ultoa_invert+0x5c>
 a56:	f6 cf       	rjmp	.-20     	; 0xa44 <__ultoa_invert+0x58>
 a58:	46 2f       	mov	r20, r22
 a5a:	4f 70       	andi	r20, 0x0F	; 15
 a5c:	40 5d       	subi	r20, 0xD0	; 208
 a5e:	4a 33       	cpi	r20, 0x3A	; 58
 a60:	18 f0       	brcs	.+6      	; 0xa68 <__ultoa_invert+0x7c>
 a62:	49 5d       	subi	r20, 0xD9	; 217
 a64:	31 fd       	sbrc	r19, 1
 a66:	40 52       	subi	r20, 0x20	; 32
 a68:	41 93       	st	Z+, r20
 a6a:	02 d0       	rcall	.+4      	; 0xa70 <__ultoa_invert+0x84>
 a6c:	a9 f7       	brne	.-22     	; 0xa58 <__ultoa_invert+0x6c>
 a6e:	ea cf       	rjmp	.-44     	; 0xa44 <__ultoa_invert+0x58>
 a70:	b4 e0       	ldi	r27, 0x04	; 4
 a72:	a6 95       	lsr	r26
 a74:	97 95       	ror	r25
 a76:	87 95       	ror	r24
 a78:	77 95       	ror	r23
 a7a:	67 95       	ror	r22
 a7c:	ba 95       	dec	r27
 a7e:	c9 f7       	brne	.-14     	; 0xa72 <__ultoa_invert+0x86>
 a80:	00 97       	sbiw	r24, 0x00	; 0
 a82:	61 05       	cpc	r22, r1
 a84:	71 05       	cpc	r23, r1
 a86:	08 95       	ret
 a88:	9b 01       	movw	r18, r22
 a8a:	ac 01       	movw	r20, r24
 a8c:	0a 2e       	mov	r0, r26
 a8e:	06 94       	lsr	r0
 a90:	57 95       	ror	r21
 a92:	47 95       	ror	r20
 a94:	37 95       	ror	r19
 a96:	27 95       	ror	r18
 a98:	ba 95       	dec	r27
 a9a:	c9 f7       	brne	.-14     	; 0xa8e <__ultoa_invert+0xa2>
 a9c:	62 0f       	add	r22, r18
 a9e:	73 1f       	adc	r23, r19
 aa0:	84 1f       	adc	r24, r20
 aa2:	95 1f       	adc	r25, r21
 aa4:	a0 1d       	adc	r26, r0
 aa6:	08 95       	ret

00000aa8 <__prologue_saves__>:
 aa8:	2f 92       	push	r2
 aaa:	3f 92       	push	r3
 aac:	4f 92       	push	r4
 aae:	5f 92       	push	r5
 ab0:	6f 92       	push	r6
 ab2:	7f 92       	push	r7
 ab4:	8f 92       	push	r8
 ab6:	9f 92       	push	r9
 ab8:	af 92       	push	r10
 aba:	bf 92       	push	r11
 abc:	cf 92       	push	r12
 abe:	df 92       	push	r13
 ac0:	ef 92       	push	r14
 ac2:	ff 92       	push	r15
 ac4:	0f 93       	push	r16
 ac6:	1f 93       	push	r17
 ac8:	cf 93       	push	r28
 aca:	df 93       	push	r29
 acc:	cd b7       	in	r28, 0x3d	; 61
 ace:	de b7       	in	r29, 0x3e	; 62
 ad0:	ca 1b       	sub	r28, r26
 ad2:	db 0b       	sbc	r29, r27
 ad4:	0f b6       	in	r0, 0x3f	; 63
 ad6:	f8 94       	cli
 ad8:	de bf       	out	0x3e, r29	; 62
 ada:	0f be       	out	0x3f, r0	; 63
 adc:	cd bf       	out	0x3d, r28	; 61
 ade:	09 94       	ijmp

00000ae0 <__epilogue_restores__>:
 ae0:	2a 88       	ldd	r2, Y+18	; 0x12
 ae2:	39 88       	ldd	r3, Y+17	; 0x11
 ae4:	48 88       	ldd	r4, Y+16	; 0x10
 ae6:	5f 84       	ldd	r5, Y+15	; 0x0f
 ae8:	6e 84       	ldd	r6, Y+14	; 0x0e
 aea:	7d 84       	ldd	r7, Y+13	; 0x0d
 aec:	8c 84       	ldd	r8, Y+12	; 0x0c
 aee:	9b 84       	ldd	r9, Y+11	; 0x0b
 af0:	aa 84       	ldd	r10, Y+10	; 0x0a
 af2:	b9 84       	ldd	r11, Y+9	; 0x09
 af4:	c8 84       	ldd	r12, Y+8	; 0x08
 af6:	df 80       	ldd	r13, Y+7	; 0x07
 af8:	ee 80       	ldd	r14, Y+6	; 0x06
 afa:	fd 80       	ldd	r15, Y+5	; 0x05
 afc:	0c 81       	ldd	r16, Y+4	; 0x04
 afe:	1b 81       	ldd	r17, Y+3	; 0x03
 b00:	aa 81       	ldd	r26, Y+2	; 0x02
 b02:	b9 81       	ldd	r27, Y+1	; 0x01
 b04:	ce 0f       	add	r28, r30
 b06:	d1 1d       	adc	r29, r1
 b08:	0f b6       	in	r0, 0x3f	; 63
 b0a:	f8 94       	cli
 b0c:	de bf       	out	0x3e, r29	; 62
 b0e:	0f be       	out	0x3f, r0	; 63
 b10:	cd bf       	out	0x3d, r28	; 61
 b12:	ed 01       	movw	r28, r26
 b14:	08 95       	ret

00000b16 <_exit>:
 b16:	f8 94       	cli

00000b18 <__stop_program>:
 b18:	ff cf       	rjmp	.-2      	; 0xb18 <__stop_program>
