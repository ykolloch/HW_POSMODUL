
Positionsmodul.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010e  00800100  00000d2c  00000dc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000145  0080020e  0080020e  00000ece  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ece  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c37  00000000  00000000  00000fca  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000253  00000000  00000000  00001c01  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d6  00000000  00000000  00001e54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000264  00000000  00000000  0000222c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000310  00000000  00000000  00002490  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004f1  00000000  00000000  000027a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002c91  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__vector_20>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 1a 03 	jmp	0x634	; 0x634 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	12 e0       	ldi	r17, 0x02	; 2
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ec e2       	ldi	r30, 0x2C	; 44
  90:	fd e0       	ldi	r31, 0x0D	; 13
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ae 30       	cpi	r26, 0x0E	; 14
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	23 e0       	ldi	r18, 0x03	; 3
  a0:	ae e0       	ldi	r26, 0x0E	; 14
  a2:	b2 e0       	ldi	r27, 0x02	; 2
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a3 35       	cpi	r26, 0x53	; 83
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 8d 03 	call	0x71a	; 0x71a <main>
  b2:	0c 94 94 06 	jmp	0xd28	; 0xd28 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <uart_init>:
volatile char recMsg2[200];
volatile int msgInt = 0;
volatile int msgInt2 = 0;

void uart_init(void) {
	UBRR0H = (BAUDRATE >> 8);
  ba:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = BAUDRATE;
  be:	81 e8       	ldi	r24, 0x81	; 129
  c0:	80 93 c4 00 	sts	0x00C4, r24
	
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0);
  c4:	e1 ec       	ldi	r30, 0xC1	; 193
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	88 61       	ori	r24, 0x18	; 24
  cc:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ01) | ( 1<< UCSZ00);
  ce:	a2 ec       	ldi	r26, 0xC2	; 194
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	8c 91       	ld	r24, X
  d4:	86 60       	ori	r24, 0x06	; 6
  d6:	8c 93       	st	X, r24
	
	UCSR0B |= (1 << RXCIE0);
  d8:	80 81       	ld	r24, Z
  da:	80 68       	ori	r24, 0x80	; 128
  dc:	80 83       	st	Z, r24
	UCSR0A |= (1 << RXC0);
  de:	e0 ec       	ldi	r30, 0xC0	; 192
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	80 68       	ori	r24, 0x80	; 128
  e6:	80 83       	st	Z, r24
	
	sei();
  e8:	78 94       	sei
  ea:	08 95       	ret

000000ec <uart_init2>:
}

void uart_init2(void) {
	UBRR1H = (BAUDRATE >> 8);
  ec:	10 92 cd 00 	sts	0x00CD, r1
	UBRR1L = BAUDRATE;
  f0:	81 e8       	ldi	r24, 0x81	; 129
  f2:	80 93 cc 00 	sts	0x00CC, r24
	
	UCSR1B |= (1 << TXEN1) | (1 << RXEN1);
  f6:	e9 ec       	ldi	r30, 0xC9	; 201
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	88 61       	ori	r24, 0x18	; 24
  fe:	80 83       	st	Z, r24
	UCSR1C |= (1 << UCSZ11) | ( 1<< UCSZ10);
 100:	ea ec       	ldi	r30, 0xCA	; 202
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	86 60       	ori	r24, 0x06	; 6
 108:	80 83       	st	Z, r24
	
	sei();
 10a:	78 94       	sei
 10c:	08 95       	ret

0000010e <uart_transmit>:
}

void uart_transmit(char c) {
	while(!(UCSR0A & (1 << UDRE0))) {
 10e:	90 91 c0 00 	lds	r25, 0x00C0
 112:	95 fd       	sbrc	r25, 5
 114:	06 c0       	rjmp	.+12     	; 0x122 <uart_transmit+0x14>
 116:	e0 ec       	ldi	r30, 0xC0	; 192
 118:	f0 e0       	ldi	r31, 0x00	; 0
		PORTD |= (1 << LED_RED);
 11a:	5f 9a       	sbi	0x0b, 7	; 11
	
	sei();
}

void uart_transmit(char c) {
	while(!(UCSR0A & (1 << UDRE0))) {
 11c:	90 81       	ld	r25, Z
 11e:	95 ff       	sbrs	r25, 5
 120:	fc cf       	rjmp	.-8      	; 0x11a <uart_transmit+0xc>
		PORTD |= (1 << LED_RED);
	}
	
	PORTD &= ~(1 << LED_RED);
 122:	5f 98       	cbi	0x0b, 7	; 11
	UDR0 = c;
 124:	80 93 c6 00 	sts	0x00C6, r24
 128:	08 95       	ret

0000012a <uart_transmit2>:
	while(!(UCSR0A & (1 << RXC0)));
	return UDR0;
}

void uart_transmit2(char c) {
	while(!(UCSR1A & (1 << UDRE1)));
 12a:	e8 ec       	ldi	r30, 0xC8	; 200
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	90 81       	ld	r25, Z
 130:	95 ff       	sbrs	r25, 5
 132:	fd cf       	rjmp	.-6      	; 0x12e <uart_transmit2+0x4>
	UDR1 = c;
 134:	80 93 ce 00 	sts	0x00CE, r24
 138:	08 95       	ret

0000013a <uart_sendString>:
char uart_read2() {
	while(!(UCSR1A & (1 << RXC1)));
	return UDR1;
}

void uart_sendString(char temp[]) {
 13a:	ef 92       	push	r14
 13c:	ff 92       	push	r15
 13e:	0f 93       	push	r16
 140:	1f 93       	push	r17
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	8c 01       	movw	r16, r24
 148:	7c 01       	movw	r14, r24
	for(int i=0; i < strlen(temp); i++) {
 14a:	c0 e0       	ldi	r28, 0x00	; 0
 14c:	d0 e0       	ldi	r29, 0x00	; 0
 14e:	06 c0       	rjmp	.+12     	; 0x15c <uart_sendString+0x22>
		uart_transmit(temp[i]);
 150:	f7 01       	movw	r30, r14
 152:	81 91       	ld	r24, Z+
 154:	7f 01       	movw	r14, r30
 156:	0e 94 87 00 	call	0x10e	; 0x10e <uart_transmit>
	while(!(UCSR1A & (1 << RXC1)));
	return UDR1;
}

void uart_sendString(char temp[]) {
	for(int i=0; i < strlen(temp); i++) {
 15a:	21 96       	adiw	r28, 0x01	; 1
 15c:	f8 01       	movw	r30, r16
 15e:	01 90       	ld	r0, Z+
 160:	00 20       	and	r0, r0
 162:	e9 f7       	brne	.-6      	; 0x15e <uart_sendString+0x24>
 164:	31 97       	sbiw	r30, 0x01	; 1
 166:	e0 1b       	sub	r30, r16
 168:	f1 0b       	sbc	r31, r17
 16a:	ce 17       	cp	r28, r30
 16c:	df 07       	cpc	r29, r31
 16e:	80 f3       	brcs	.-32     	; 0x150 <uart_sendString+0x16>
		uart_transmit(temp[i]);
	}
}
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	1f 91       	pop	r17
 176:	0f 91       	pop	r16
 178:	ff 90       	pop	r15
 17a:	ef 90       	pop	r14
 17c:	08 95       	ret

0000017e <wifiDirect_connection>:
		uart_transmit2(temp[i]);
	}
}

void wifiDirect_connection() {
	PORTD ^= (1 << LED_YELLOW);
 17e:	9b b1       	in	r25, 0x0b	; 11
 180:	80 e4       	ldi	r24, 0x40	; 64
 182:	89 27       	eor	r24, r25
 184:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	88 e0       	ldi	r24, 0x08	; 8
 18a:	9d e3       	ldi	r25, 0x3D	; 61
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <wifiDirect_connection+0xe>
 194:	00 c0       	rjmp	.+0      	; 0x196 <wifiDirect_connection+0x18>
 196:	00 00       	nop
	_delay_ms(1000);
	uart_sendString(atCom1);
 198:	86 e9       	ldi	r24, 0x96	; 150
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 1a0:	2f e7       	ldi	r18, 0x7F	; 127
 1a2:	84 e8       	ldi	r24, 0x84	; 132
 1a4:	9e e1       	ldi	r25, 0x1E	; 30
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <wifiDirect_connection+0x28>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <wifiDirect_connection+0x32>
 1b0:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom2);
 1b2:	8c e8       	ldi	r24, 0x8C	; 140
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 1ba:	2f e7       	ldi	r18, 0x7F	; 127
 1bc:	84 e8       	ldi	r24, 0x84	; 132
 1be:	9e e1       	ldi	r25, 0x1E	; 30
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <wifiDirect_connection+0x42>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <wifiDirect_connection+0x4c>
 1ca:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom3);
 1cc:	8a e6       	ldi	r24, 0x6A	; 106
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 1d4:	2f e7       	ldi	r18, 0x7F	; 127
 1d6:	84 e8       	ldi	r24, 0x84	; 132
 1d8:	9e e1       	ldi	r25, 0x1E	; 30
 1da:	21 50       	subi	r18, 0x01	; 1
 1dc:	80 40       	sbci	r24, 0x00	; 0
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <wifiDirect_connection+0x5c>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <wifiDirect_connection+0x66>
 1e4:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom4);
 1e6:	81 e2       	ldi	r24, 0x21	; 33
 1e8:	91 e0       	ldi	r25, 0x01	; 1
 1ea:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 1ee:	2f e7       	ldi	r18, 0x7F	; 127
 1f0:	84 e8       	ldi	r24, 0x84	; 132
 1f2:	9e e1       	ldi	r25, 0x1E	; 30
 1f4:	21 50       	subi	r18, 0x01	; 1
 1f6:	80 40       	sbci	r24, 0x00	; 0
 1f8:	90 40       	sbci	r25, 0x00	; 0
 1fa:	e1 f7       	brne	.-8      	; 0x1f4 <wifiDirect_connection+0x76>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <wifiDirect_connection+0x80>
 1fe:	00 00       	nop
	_delay_ms(500);
	uart_sendString(atCom5);
 200:	8d e0       	ldi	r24, 0x0D	; 13
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
	PORTD ^= (1 << LED_YELLOW);
 208:	9b b1       	in	r25, 0x0b	; 11
 20a:	80 e4       	ldi	r24, 0x40	; 64
 20c:	89 27       	eor	r24, r25
 20e:	8b b9       	out	0x0b, r24	; 11
 210:	08 95       	ret

00000212 <grp_request>:
}

void grp_request() {
 212:	0f 93       	push	r16
 214:	1f 93       	push	r17
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	cd b7       	in	r28, 0x3d	; 61
 21c:	de b7       	in	r29, 0x3e	; 62
 21e:	c7 57       	subi	r28, 0x77	; 119
 220:	d1 09       	sbc	r29, r1
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	f8 94       	cli
 226:	de bf       	out	0x3e, r29	; 62
 228:	0f be       	out	0x3f, r0	; 63
 22a:	cd bf       	out	0x3d, r28	; 61
 22c:	2a e2       	ldi	r18, 0x2A	; 42
 22e:	30 e5       	ldi	r19, 0x50	; 80
 230:	8e ef       	ldi	r24, 0xFE	; 254
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	21 50       	subi	r18, 0x01	; 1
 236:	30 40       	sbci	r19, 0x00	; 0
 238:	80 40       	sbci	r24, 0x00	; 0
 23a:	90 40       	sbci	r25, 0x00	; 0
 23c:	d9 f7       	brne	.-10     	; 0x234 <grp_request+0x22>
 23e:	00 00       	nop
	_delay_ms(5000);
	do 
	{
		
		char ppd[30];
		char p1[] = {"at+p2ppd="};
 240:	ce 01       	movw	r24, r28
 242:	87 59       	subi	r24, 0x97	; 151
 244:	9f 4f       	sbci	r25, 0xFF	; 255
 246:	2a e0       	ldi	r18, 0x0A	; 10
 248:	e2 ec       	ldi	r30, 0xC2	; 194
 24a:	f1 e0       	ldi	r31, 0x01	; 1
 24c:	dc 01       	movw	r26, r24
 24e:	01 90       	ld	r0, Z+
 250:	0d 92       	st	X+, r0
 252:	2a 95       	dec	r18
 254:	e1 f7       	brne	.-8      	; 0x24e <grp_request+0x3c>
		char p2[] = {",0\n\r"};
 256:	9e 01       	movw	r18, r28
 258:	2d 58       	subi	r18, 0x8D	; 141
 25a:	3f 4f       	sbci	r19, 0xFF	; 255
 25c:	45 e0       	ldi	r20, 0x05	; 5
 25e:	e4 ee       	ldi	r30, 0xE4	; 228
 260:	f1 e0       	ldi	r31, 0x01	; 1
 262:	d9 01       	movw	r26, r18
 264:	01 90       	ld	r0, Z+
 266:	0d 92       	st	X+, r0
 268:	4a 95       	dec	r20
 26a:	e1 f7       	brne	.-8      	; 0x264 <grp_request+0x52>
		sprintf(ppd, "%s%s%s", p1, macAddress, p2);			//add found Mac-Address
 26c:	3f 93       	push	r19
 26e:	2f 93       	push	r18
 270:	20 e4       	ldi	r18, 0x40	; 64
 272:	33 e0       	ldi	r19, 0x03	; 3
 274:	3f 93       	push	r19
 276:	2f 93       	push	r18
 278:	9f 93       	push	r25
 27a:	8f 93       	push	r24
 27c:	8b eb       	ldi	r24, 0xBB	; 187
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	9f 93       	push	r25
 282:	8f 93       	push	r24
 284:	8e 01       	movw	r16, r28
 286:	02 5d       	subi	r16, 0xD2	; 210
 288:	1f 4f       	sbci	r17, 0xFF	; 255
 28a:	1f 93       	push	r17
 28c:	0f 93       	push	r16
 28e:	0e 94 c3 03 	call	0x786	; 0x786 <sprintf>
		uart_sendString(ppd);								//ppd request
 292:	c8 01       	movw	r24, r16
 294:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 298:	2a e2       	ldi	r18, 0x2A	; 42
 29a:	30 e5       	ldi	r19, 0x50	; 80
 29c:	8e ef       	ldi	r24, 0xFE	; 254
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	21 50       	subi	r18, 0x01	; 1
 2a2:	30 40       	sbci	r19, 0x00	; 0
 2a4:	80 40       	sbci	r24, 0x00	; 0
 2a6:	90 40       	sbci	r25, 0x00	; 0
 2a8:	d9 f7       	brne	.-10     	; 0x2a0 <grp_request+0x8e>
 2aa:	00 00       	nop
		
		_delay_ms(5000);									//wait for safety
		
		//at+p2pgrpform=7a:f8:82:cb:a3:05,6,0,,1,0,0
		char grp_form[45];
		char p3[] = {"at+p2pgrpform="};
 2ac:	ce 01       	movw	r24, r28
 2ae:	84 5b       	subi	r24, 0xB4	; 180
 2b0:	9f 4f       	sbci	r25, 0xFF	; 255
 2b2:	2f e0       	ldi	r18, 0x0F	; 15
 2b4:	ec ec       	ldi	r30, 0xCC	; 204
 2b6:	f1 e0       	ldi	r31, 0x01	; 1
 2b8:	dc 01       	movw	r26, r24
 2ba:	01 90       	ld	r0, Z+
 2bc:	0d 92       	st	X+, r0
 2be:	2a 95       	dec	r18
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <grp_request+0xa8>
		char p4[] = {",6,0,,1,0,0\n\r"};
 2c2:	9e 01       	movw	r18, r28
 2c4:	25 5a       	subi	r18, 0xA5	; 165
 2c6:	3f 4f       	sbci	r19, 0xFF	; 255
 2c8:	4e e0       	ldi	r20, 0x0E	; 14
 2ca:	eb ed       	ldi	r30, 0xDB	; 219
 2cc:	f1 e0       	ldi	r31, 0x01	; 1
 2ce:	d9 01       	movw	r26, r18
 2d0:	01 90       	ld	r0, Z+
 2d2:	0d 92       	st	X+, r0
 2d4:	4a 95       	dec	r20
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <grp_request+0xbe>
		sprintf(grp_form, "%s%s%s", p3, macAddress, p4);	//add found Mac-Address
 2d8:	3f 93       	push	r19
 2da:	2f 93       	push	r18
 2dc:	20 e4       	ldi	r18, 0x40	; 64
 2de:	33 e0       	ldi	r19, 0x03	; 3
 2e0:	3f 93       	push	r19
 2e2:	2f 93       	push	r18
 2e4:	9f 93       	push	r25
 2e6:	8f 93       	push	r24
 2e8:	8b eb       	ldi	r24, 0xBB	; 187
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	9f 93       	push	r25
 2ee:	8f 93       	push	r24
 2f0:	0d 52       	subi	r16, 0x2D	; 45
 2f2:	11 09       	sbc	r17, r1
 2f4:	1f 93       	push	r17
 2f6:	0f 93       	push	r16
 2f8:	0e 94 c3 03 	call	0x786	; 0x786 <sprintf>
		uart_sendString(grp_form);							//groupform request
 2fc:	c8 01       	movw	r24, r16
 2fe:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 302:	2f ef       	ldi	r18, 0xFF	; 255
 304:	3a e1       	ldi	r19, 0x1A	; 26
 306:	87 eb       	ldi	r24, 0xB7	; 183
 308:	21 50       	subi	r18, 0x01	; 1
 30a:	30 40       	sbci	r19, 0x00	; 0
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	e1 f7       	brne	.-8      	; 0x308 <grp_request+0xf6>
 310:	00 c0       	rjmp	.+0      	; 0x312 <grp_request+0x100>
 312:	00 00       	nop
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
		_delay_ms(3000);
		return;
	} while (macAddress[0] != '\0');
}
 31e:	c9 58       	subi	r28, 0x89	; 137
 320:	df 4f       	sbci	r29, 0xFF	; 255
 322:	0f b6       	in	r0, 0x3f	; 63
 324:	f8 94       	cli
 326:	de bf       	out	0x3e, r29	; 62
 328:	0f be       	out	0x3f, r0	; 63
 32a:	cd bf       	out	0x3d, r28	; 61
 32c:	df 91       	pop	r29
 32e:	cf 91       	pop	r28
 330:	1f 91       	pop	r17
 332:	0f 91       	pop	r16
 334:	08 95       	ret

00000336 <tcp_connection>:

void tcp_connection() {
 336:	0f 93       	push	r16
 338:	1f 93       	push	r17
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
 33e:	cd b7       	in	r28, 0x3d	; 61
 340:	de b7       	in	r29, 0x3e	; 62
 342:	ad 97       	sbiw	r28, 0x2d	; 45
 344:	0f b6       	in	r0, 0x3f	; 63
 346:	f8 94       	cli
 348:	de bf       	out	0x3e, r29	; 62
 34a:	0f be       	out	0x3f, r0	; 63
 34c:	cd bf       	out	0x3d, r28	; 61
	do 
	{
		uart_sendString("at+ndhcp=1\n\r");
 34e:	89 ee       	ldi	r24, 0xE9	; 233
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 356:	2f e7       	ldi	r18, 0x7F	; 127
 358:	84 e8       	ldi	r24, 0x84	; 132
 35a:	9e e1       	ldi	r25, 0x1E	; 30
 35c:	21 50       	subi	r18, 0x01	; 1
 35e:	80 40       	sbci	r24, 0x00	; 0
 360:	90 40       	sbci	r25, 0x00	; 0
 362:	e1 f7       	brne	.-8      	; 0x35c <tcp_connection+0x26>
 364:	00 c0       	rjmp	.+0      	; 0x366 <tcp_connection+0x30>
 366:	00 00       	nop
		_delay_ms(500);
		char nct[27];
		char p1[] = {"at+nctcp="};
 368:	8a e0       	ldi	r24, 0x0A	; 10
 36a:	e6 ef       	ldi	r30, 0xF6	; 246
 36c:	f1 e0       	ldi	r31, 0x01	; 1
 36e:	de 01       	movw	r26, r28
 370:	5c 96       	adiw	r26, 0x1c	; 28
 372:	01 90       	ld	r0, Z+
 374:	0d 92       	st	X+, r0
 376:	8a 95       	dec	r24
 378:	e1 f7       	brne	.-8      	; 0x372 <tcp_connection+0x3c>
		char p2[] = {",8288\n\r"};
 37a:	88 e0       	ldi	r24, 0x08	; 8
 37c:	e0 e0       	ldi	r30, 0x00	; 0
 37e:	f2 e0       	ldi	r31, 0x02	; 2
 380:	de 01       	movw	r26, r28
 382:	96 96       	adiw	r26, 0x26	; 38
 384:	01 90       	ld	r0, Z+
 386:	0d 92       	st	X+, r0
 388:	8a 95       	dec	r24
 38a:	e1 f7       	brne	.-8      	; 0x384 <tcp_connection+0x4e>
		sprintf(nct, "%s%s%s",p1, host_ip, p2);				//add host_ip
 38c:	ce 01       	movw	r24, r28
 38e:	86 96       	adiw	r24, 0x26	; 38
 390:	9f 93       	push	r25
 392:	8f 93       	push	r24
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	ce 01       	movw	r24, r28
 39e:	4c 96       	adiw	r24, 0x1c	; 28
 3a0:	9f 93       	push	r25
 3a2:	8f 93       	push	r24
 3a4:	8b eb       	ldi	r24, 0xBB	; 187
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	9f 93       	push	r25
 3aa:	8f 93       	push	r24
 3ac:	8e 01       	movw	r16, r28
 3ae:	0f 5f       	subi	r16, 0xFF	; 255
 3b0:	1f 4f       	sbci	r17, 0xFF	; 255
 3b2:	1f 93       	push	r17
 3b4:	0f 93       	push	r16
 3b6:	0e 94 c3 03 	call	0x786	; 0x786 <sprintf>
		uart_sendString(nct);
 3ba:	c8 01       	movw	r24, r16
 3bc:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 3c0:	2f ef       	ldi	r18, 0xFF	; 255
 3c2:	8a e1       	ldi	r24, 0x1A	; 26
 3c4:	97 eb       	ldi	r25, 0xB7	; 183
 3c6:	21 50       	subi	r18, 0x01	; 1
 3c8:	80 40       	sbci	r24, 0x00	; 0
 3ca:	90 40       	sbci	r25, 0x00	; 0
 3cc:	e1 f7       	brne	.-8      	; 0x3c6 <tcp_connection+0x90>
 3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <tcp_connection+0x9a>
 3d0:	00 00       	nop
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
		_delay_ms(3000);
		return;
	} while (host_ip[0] != '\0');
}
 3dc:	ad 96       	adiw	r28, 0x2d	; 45
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	f8 94       	cli
 3e2:	de bf       	out	0x3e, r29	; 62
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	cd bf       	out	0x3d, r28	; 61
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	1f 91       	pop	r17
 3ee:	0f 91       	pop	r16
 3f0:	08 95       	ret

000003f2 <get_macAddress>:

void get_hostIP(char tmp[]) {
	
}

void get_macAddress(char temp[]) {
 3f2:	0f 93       	push	r16
 3f4:	1f 93       	push	r17
 3f6:	cf 93       	push	r28
 3f8:	df 93       	push	r29
 3fa:	cd b7       	in	r28, 0x3d	; 61
 3fc:	de b7       	in	r29, 0x3e	; 62
 3fe:	6e 97       	sbiw	r28, 0x1e	; 30
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	f8 94       	cli
 404:	de bf       	out	0x3e, r29	; 62
 406:	0f be       	out	0x3f, r0	; 63
 408:	cd bf       	out	0x3d, r28	; 61
 40a:	8c 01       	movw	r16, r24
	char subString[10];
	char p2p_found[10] = {"p2p-dev"};		//p2p device found
 40c:	88 e0       	ldi	r24, 0x08	; 8
 40e:	e7 ea       	ldi	r30, 0xA7	; 167
 410:	f1 e0       	ldi	r31, 0x01	; 1
 412:	de 01       	movw	r26, r28
 414:	1b 96       	adiw	r26, 0x0b	; 11
 416:	01 90       	ld	r0, Z+
 418:	0d 92       	st	X+, r0
 41a:	8a 95       	dec	r24
 41c:	e1 f7       	brne	.-8      	; 0x416 <get_macAddress+0x24>
 41e:	1c 8a       	std	Y+20, r1	; 0x14
 420:	1b 8a       	std	Y+19, r1	; 0x13
	char p2p_found2[10] = {"p2v-fou"};		//backup
 422:	88 e0       	ldi	r24, 0x08	; 8
 424:	e1 eb       	ldi	r30, 0xB1	; 177
 426:	f1 e0       	ldi	r31, 0x01	; 1
 428:	de 01       	movw	r26, r28
 42a:	55 96       	adiw	r26, 0x15	; 21
 42c:	01 90       	ld	r0, Z+
 42e:	0d 92       	st	X+, r0
 430:	8a 95       	dec	r24
 432:	e1 f7       	brne	.-8      	; 0x42c <get_macAddress+0x3a>
 434:	1e 8e       	std	Y+30, r1	; 0x1e
 436:	1d 8e       	std	Y+29, r1	; 0x1d
	strncpy(subString, &temp[0], 7);
 438:	47 e0       	ldi	r20, 0x07	; 7
 43a:	50 e0       	ldi	r21, 0x00	; 0
 43c:	b8 01       	movw	r22, r16
 43e:	ce 01       	movw	r24, r28
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	0e 94 b4 03 	call	0x768	; 0x768 <strncpy>
	subString[8] = '\n';
 446:	8a e0       	ldi	r24, 0x0A	; 10
 448:	89 87       	std	Y+9, r24	; 0x09
	subString[9] = '\0';
 44a:	1a 86       	std	Y+10, r1	; 0x0a
	if(strcmp(p2p_found, subString) == 0) {
 44c:	be 01       	movw	r22, r28
 44e:	6f 5f       	subi	r22, 0xFF	; 255
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	ce 01       	movw	r24, r28
 454:	0b 96       	adiw	r24, 0x0b	; 11
 456:	0e 94 ab 03 	call	0x756	; 0x756 <strcmp>
 45a:	89 2b       	or	r24, r25
 45c:	79 f4       	brne	.+30     	; 0x47c <get_macAddress+0x8a>
		PORTD ^= (1 << LED_RED);
 45e:	8b b1       	in	r24, 0x0b	; 11
 460:	80 58       	subi	r24, 0x80	; 128
 462:	8b b9       	out	0x0b, r24	; 11
		strncpy(&macAddress, &temp[14], 17);		//string copy Mac-Address
 464:	b8 01       	movw	r22, r16
 466:	62 5f       	subi	r22, 0xF2	; 242
 468:	7f 4f       	sbci	r23, 0xFF	; 255
 46a:	41 e1       	ldi	r20, 0x11	; 17
 46c:	50 e0       	ldi	r21, 0x00	; 0
 46e:	80 e4       	ldi	r24, 0x40	; 64
 470:	93 e0       	ldi	r25, 0x03	; 3
 472:	0e 94 b4 03 	call	0x768	; 0x768 <strncpy>
		macAddress[18] = '\0';
 476:	10 92 52 03 	sts	0x0352, r1
 47a:	17 c0       	rjmp	.+46     	; 0x4aa <get_macAddress+0xb8>
	} else if(strcmp(p2p_found2, subString) == 0) {
 47c:	be 01       	movw	r22, r28
 47e:	6f 5f       	subi	r22, 0xFF	; 255
 480:	7f 4f       	sbci	r23, 0xFF	; 255
 482:	ce 01       	movw	r24, r28
 484:	45 96       	adiw	r24, 0x15	; 21
 486:	0e 94 ab 03 	call	0x756	; 0x756 <strcmp>
 48a:	89 2b       	or	r24, r25
 48c:	71 f4       	brne	.+28     	; 0x4aa <get_macAddress+0xb8>
		PORTD ^= (1 << LED_RED);
 48e:	8b b1       	in	r24, 0x0b	; 11
 490:	80 58       	subi	r24, 0x80	; 128
 492:	8b b9       	out	0x0b, r24	; 11
		strncpy(&macAddress, &temp[10], 17);
 494:	b8 01       	movw	r22, r16
 496:	66 5f       	subi	r22, 0xF6	; 246
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	41 e1       	ldi	r20, 0x11	; 17
 49c:	50 e0       	ldi	r21, 0x00	; 0
 49e:	80 e4       	ldi	r24, 0x40	; 64
 4a0:	93 e0       	ldi	r25, 0x03	; 3
 4a2:	0e 94 b4 03 	call	0x768	; 0x768 <strncpy>
		macAddress[18] = '\0';
 4a6:	10 92 52 03 	sts	0x0352, r1
	}
}
 4aa:	6e 96       	adiw	r28, 0x1e	; 30
 4ac:	0f b6       	in	r0, 0x3f	; 63
 4ae:	f8 94       	cli
 4b0:	de bf       	out	0x3e, r29	; 62
 4b2:	0f be       	out	0x3f, r0	; 63
 4b4:	cd bf       	out	0x3d, r28	; 61
 4b6:	df 91       	pop	r29
 4b8:	cf 91       	pop	r28
 4ba:	1f 91       	pop	r17
 4bc:	0f 91       	pop	r16
 4be:	08 95       	ret

000004c0 <buildTransmissionString>:

void buildTransmissionString(char data[]) {
 4c0:	0f 93       	push	r16
 4c2:	1f 93       	push	r17
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	cd b7       	in	r28, 0x3d	; 61
 4ca:	de b7       	in	r29, 0x3e	; 62
 4cc:	67 97       	sbiw	r28, 0x17	; 23
 4ce:	0f b6       	in	r0, 0x3f	; 63
 4d0:	f8 94       	cli
 4d2:	de bf       	out	0x3e, r29	; 62
 4d4:	0f be       	out	0x3f, r0	; 63
 4d6:	cd bf       	out	0x3d, r28	; 61
	PORTD |= (1 << LED_YELLOW);
 4d8:	5e 9a       	sbi	0x0b, 6	; 11
	const unsigned char temp[12];
	const unsigned char s[] = {0x1B, 0x53, 0x30};			//Hex = <ESC> S <CID>
 4da:	8b e1       	ldi	r24, 0x1B	; 27
 4dc:	8d 87       	std	Y+13, r24	; 0x0d
 4de:	93 e5       	ldi	r25, 0x53	; 83
 4e0:	9e 87       	std	Y+14, r25	; 0x0e
 4e2:	90 e3       	ldi	r25, 0x30	; 48
 4e4:	9f 87       	std	Y+15, r25	; 0x0f
	unsigned char m[] = {"Hello"};
 4e6:	96 e0       	ldi	r25, 0x06	; 6
 4e8:	e8 e0       	ldi	r30, 0x08	; 8
 4ea:	f2 e0       	ldi	r31, 0x02	; 2
 4ec:	de 01       	movw	r26, r28
 4ee:	50 96       	adiw	r26, 0x10	; 16
 4f0:	01 90       	ld	r0, Z+
 4f2:	0d 92       	st	X+, r0
 4f4:	9a 95       	dec	r25
 4f6:	e1 f7       	brne	.-8      	; 0x4f0 <buildTransmissionString+0x30>
	const unsigned char p3[] = {0x1B, 0x45};				//HEY = <ESC> E
 4f8:	8e 8b       	std	Y+22, r24	; 0x16
 4fa:	85 e4       	ldi	r24, 0x45	; 69
 4fc:	8f 8b       	std	Y+23, r24	; 0x17
	sprintf(temp, "%s%s%s", s, m, p3);
 4fe:	ce 01       	movw	r24, r28
 500:	46 96       	adiw	r24, 0x16	; 22
 502:	9f 93       	push	r25
 504:	8f 93       	push	r24
 506:	06 97       	sbiw	r24, 0x06	; 6
 508:	9f 93       	push	r25
 50a:	8f 93       	push	r24
 50c:	03 97       	sbiw	r24, 0x03	; 3
 50e:	9f 93       	push	r25
 510:	8f 93       	push	r24
 512:	8b eb       	ldi	r24, 0xBB	; 187
 514:	91 e0       	ldi	r25, 0x01	; 1
 516:	9f 93       	push	r25
 518:	8f 93       	push	r24
 51a:	8e 01       	movw	r16, r28
 51c:	0f 5f       	subi	r16, 0xFF	; 255
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	1f 93       	push	r17
 522:	0f 93       	push	r16
 524:	0e 94 c3 03 	call	0x786	; 0x786 <sprintf>
	uart_sendString(temp);
 528:	c8 01       	movw	r24, r16
 52a:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_sendString>
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	f8 94       	cli
 532:	de bf       	out	0x3e, r29	; 62
 534:	0f be       	out	0x3f, r0	; 63
 536:	cd bf       	out	0x3d, r28	; 61
}
 538:	67 96       	adiw	r28, 0x17	; 23
 53a:	0f b6       	in	r0, 0x3f	; 63
 53c:	f8 94       	cli
 53e:	de bf       	out	0x3e, r29	; 62
 540:	0f be       	out	0x3f, r0	; 63
 542:	cd bf       	out	0x3d, r28	; 61
 544:	df 91       	pop	r29
 546:	cf 91       	pop	r28
 548:	1f 91       	pop	r17
 54a:	0f 91       	pop	r16
 54c:	08 95       	ret

0000054e <__vector_20>:

ISR(USART0_RX_vect) {
 54e:	1f 92       	push	r1
 550:	0f 92       	push	r0
 552:	0f b6       	in	r0, 0x3f	; 63
 554:	0f 92       	push	r0
 556:	11 24       	eor	r1, r1
 558:	2f 93       	push	r18
 55a:	3f 93       	push	r19
 55c:	4f 93       	push	r20
 55e:	5f 93       	push	r21
 560:	6f 93       	push	r22
 562:	7f 93       	push	r23
 564:	8f 93       	push	r24
 566:	9f 93       	push	r25
 568:	af 93       	push	r26
 56a:	bf 93       	push	r27
 56c:	ef 93       	push	r30
 56e:	ff 93       	push	r31
	REC = UDR0;
 570:	80 91 c6 00 	lds	r24, 0x00C6
 574:	80 93 12 02 	sts	0x0212, r24
	uart_transmit2(REC);
 578:	80 91 12 02 	lds	r24, 0x0212
 57c:	0e 94 95 00 	call	0x12a	; 0x12a <uart_transmit2>
	recMsg[msgInt] = REC;
 580:	e0 91 10 02 	lds	r30, 0x0210
 584:	f0 91 11 02 	lds	r31, 0x0211
 588:	80 91 12 02 	lds	r24, 0x0212
 58c:	e4 52       	subi	r30, 0x24	; 36
 58e:	fd 4f       	sbci	r31, 0xFD	; 253
 590:	80 83       	st	Z, r24
	if(REC == '\n') {
 592:	80 91 12 02 	lds	r24, 0x0212
 596:	8a 30       	cpi	r24, 0x0A	; 10
 598:	79 f5       	brne	.+94     	; 0x5f8 <__vector_20+0xaa>
		recMsg[msgInt++] = '\n';
 59a:	80 91 10 02 	lds	r24, 0x0210
 59e:	90 91 11 02 	lds	r25, 0x0211
 5a2:	9c 01       	movw	r18, r24
 5a4:	2f 5f       	subi	r18, 0xFF	; 255
 5a6:	3f 4f       	sbci	r19, 0xFF	; 255
 5a8:	30 93 11 02 	sts	0x0211, r19
 5ac:	20 93 10 02 	sts	0x0210, r18
 5b0:	fc 01       	movw	r30, r24
 5b2:	e4 52       	subi	r30, 0x24	; 36
 5b4:	fd 4f       	sbci	r31, 0xFD	; 253
 5b6:	2a e0       	ldi	r18, 0x0A	; 10
 5b8:	20 83       	st	Z, r18
		recMsg[msgInt++] = '\0';
 5ba:	80 91 10 02 	lds	r24, 0x0210
 5be:	90 91 11 02 	lds	r25, 0x0211
 5c2:	9c 01       	movw	r18, r24
 5c4:	2f 5f       	subi	r18, 0xFF	; 255
 5c6:	3f 4f       	sbci	r19, 0xFF	; 255
 5c8:	30 93 11 02 	sts	0x0211, r19
 5cc:	20 93 10 02 	sts	0x0210, r18
 5d0:	fc 01       	movw	r30, r24
 5d2:	e4 52       	subi	r30, 0x24	; 36
 5d4:	fd 4f       	sbci	r31, 0xFD	; 253
 5d6:	10 82       	st	Z, r1
		msgInt = 0;
 5d8:	10 92 11 02 	sts	0x0211, r1
 5dc:	10 92 10 02 	sts	0x0210, r1
		get_macAddress(recMsg);
 5e0:	8c ed       	ldi	r24, 0xDC	; 220
 5e2:	92 e0       	ldi	r25, 0x02	; 2
 5e4:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <get_macAddress>
		get_hostIP(recMsg);
		memset(&recMsg[0], 0, sizeof(recMsg));
 5e8:	84 e6       	ldi	r24, 0x64	; 100
 5ea:	ec ed       	ldi	r30, 0xDC	; 220
 5ec:	f2 e0       	ldi	r31, 0x02	; 2
 5ee:	df 01       	movw	r26, r30
 5f0:	1d 92       	st	X+, r1
 5f2:	8a 95       	dec	r24
 5f4:	e9 f7       	brne	.-6      	; 0x5f0 <__vector_20+0xa2>
 5f6:	0d c0       	rjmp	.+26     	; 0x612 <__vector_20+0xc4>
	} else if (REC == '\r')	{
 5f8:	80 91 12 02 	lds	r24, 0x0212
 5fc:	8d 30       	cpi	r24, 0x0D	; 13
 5fe:	49 f0       	breq	.+18     	; 0x612 <__vector_20+0xc4>
	} else {
		msgInt++;
 600:	80 91 10 02 	lds	r24, 0x0210
 604:	90 91 11 02 	lds	r25, 0x0211
 608:	01 96       	adiw	r24, 0x01	; 1
 60a:	90 93 11 02 	sts	0x0211, r25
 60e:	80 93 10 02 	sts	0x0210, r24
	}
}
 612:	ff 91       	pop	r31
 614:	ef 91       	pop	r30
 616:	bf 91       	pop	r27
 618:	af 91       	pop	r26
 61a:	9f 91       	pop	r25
 61c:	8f 91       	pop	r24
 61e:	7f 91       	pop	r23
 620:	6f 91       	pop	r22
 622:	5f 91       	pop	r21
 624:	4f 91       	pop	r20
 626:	3f 91       	pop	r19
 628:	2f 91       	pop	r18
 62a:	0f 90       	pop	r0
 62c:	0f be       	out	0x3f, r0	; 63
 62e:	0f 90       	pop	r0
 630:	1f 90       	pop	r1
 632:	18 95       	reti

00000634 <__vector_28>:

ISR(USART1_RX_vect) {
 634:	1f 92       	push	r1
 636:	0f 92       	push	r0
 638:	0f b6       	in	r0, 0x3f	; 63
 63a:	0f 92       	push	r0
 63c:	11 24       	eor	r1, r1
 63e:	2f 93       	push	r18
 640:	3f 93       	push	r19
 642:	4f 93       	push	r20
 644:	5f 93       	push	r21
 646:	6f 93       	push	r22
 648:	7f 93       	push	r23
 64a:	8f 93       	push	r24
 64c:	9f 93       	push	r25
 64e:	af 93       	push	r26
 650:	bf 93       	push	r27
 652:	ef 93       	push	r30
 654:	ff 93       	push	r31
	REC2 = UDR1;
 656:	80 91 ce 00 	lds	r24, 0x00CE
 65a:	80 93 db 02 	sts	0x02DB, r24
	uart_transmit2(REC2);
 65e:	80 91 db 02 	lds	r24, 0x02DB
 662:	0e 94 95 00 	call	0x12a	; 0x12a <uart_transmit2>
	recMsg2[msgInt2] = REC2;
 666:	e0 91 0e 02 	lds	r30, 0x020E
 66a:	f0 91 0f 02 	lds	r31, 0x020F
 66e:	80 91 db 02 	lds	r24, 0x02DB
 672:	ed 5e       	subi	r30, 0xED	; 237
 674:	fd 4f       	sbci	r31, 0xFD	; 253
 676:	80 83       	st	Z, r24
	if(REC2 == '\n') {
 678:	80 91 db 02 	lds	r24, 0x02DB
 67c:	8a 30       	cpi	r24, 0x0A	; 10
 67e:	79 f5       	brne	.+94     	; 0x6de <__vector_28+0xaa>
		recMsg2[msgInt2++] = '\n';
 680:	80 91 0e 02 	lds	r24, 0x020E
 684:	90 91 0f 02 	lds	r25, 0x020F
 688:	9c 01       	movw	r18, r24
 68a:	2f 5f       	subi	r18, 0xFF	; 255
 68c:	3f 4f       	sbci	r19, 0xFF	; 255
 68e:	30 93 0f 02 	sts	0x020F, r19
 692:	20 93 0e 02 	sts	0x020E, r18
 696:	fc 01       	movw	r30, r24
 698:	ed 5e       	subi	r30, 0xED	; 237
 69a:	fd 4f       	sbci	r31, 0xFD	; 253
 69c:	2a e0       	ldi	r18, 0x0A	; 10
 69e:	20 83       	st	Z, r18
		recMsg2[msgInt2++] = '\0';
 6a0:	80 91 0e 02 	lds	r24, 0x020E
 6a4:	90 91 0f 02 	lds	r25, 0x020F
 6a8:	9c 01       	movw	r18, r24
 6aa:	2f 5f       	subi	r18, 0xFF	; 255
 6ac:	3f 4f       	sbci	r19, 0xFF	; 255
 6ae:	30 93 0f 02 	sts	0x020F, r19
 6b2:	20 93 0e 02 	sts	0x020E, r18
 6b6:	fc 01       	movw	r30, r24
 6b8:	ed 5e       	subi	r30, 0xED	; 237
 6ba:	fd 4f       	sbci	r31, 0xFD	; 253
 6bc:	10 82       	st	Z, r1
		msgInt2 = 0;
 6be:	10 92 0f 02 	sts	0x020F, r1
 6c2:	10 92 0e 02 	sts	0x020E, r1
		buildTransmissionString(recMsg2);
 6c6:	83 e1       	ldi	r24, 0x13	; 19
 6c8:	92 e0       	ldi	r25, 0x02	; 2
 6ca:	0e 94 60 02 	call	0x4c0	; 0x4c0 <buildTransmissionString>
		memset(&recMsg2[0], 0, sizeof(recMsg2));
 6ce:	88 ec       	ldi	r24, 0xC8	; 200
 6d0:	e3 e1       	ldi	r30, 0x13	; 19
 6d2:	f2 e0       	ldi	r31, 0x02	; 2
 6d4:	df 01       	movw	r26, r30
 6d6:	1d 92       	st	X+, r1
 6d8:	8a 95       	dec	r24
 6da:	e9 f7       	brne	.-6      	; 0x6d6 <__vector_28+0xa2>
 6dc:	0d c0       	rjmp	.+26     	; 0x6f8 <__vector_28+0xc4>
		} else if (REC2 == '\r')	{
 6de:	80 91 db 02 	lds	r24, 0x02DB
 6e2:	8d 30       	cpi	r24, 0x0D	; 13
 6e4:	49 f0       	breq	.+18     	; 0x6f8 <__vector_28+0xc4>
		} else {
		msgInt2++;
 6e6:	80 91 0e 02 	lds	r24, 0x020E
 6ea:	90 91 0f 02 	lds	r25, 0x020F
 6ee:	01 96       	adiw	r24, 0x01	; 1
 6f0:	90 93 0f 02 	sts	0x020F, r25
 6f4:	80 93 0e 02 	sts	0x020E, r24
	}
}
 6f8:	ff 91       	pop	r31
 6fa:	ef 91       	pop	r30
 6fc:	bf 91       	pop	r27
 6fe:	af 91       	pop	r26
 700:	9f 91       	pop	r25
 702:	8f 91       	pop	r24
 704:	7f 91       	pop	r23
 706:	6f 91       	pop	r22
 708:	5f 91       	pop	r21
 70a:	4f 91       	pop	r20
 70c:	3f 91       	pop	r19
 70e:	2f 91       	pop	r18
 710:	0f 90       	pop	r0
 712:	0f be       	out	0x3f, r0	; 63
 714:	0f 90       	pop	r0
 716:	1f 90       	pop	r1
 718:	18 95       	reti

0000071a <main>:


int main(void)
{
	DDRD |= (1 << LED_GREEN);
 71a:	55 9a       	sbi	0x0a, 5	; 10
	DDRD |= (1 << LED_YELLOW);
 71c:	56 9a       	sbi	0x0a, 6	; 10
	DDRD |= (1 << LED_RED);
 71e:	57 9a       	sbi	0x0a, 7	; 10
	
	PORTD &= ~(1 << LED_GREEN);
 720:	5d 98       	cbi	0x0b, 5	; 11
	PORTD &= ~(1 << LED_YELLOW);
 722:	5e 98       	cbi	0x0b, 6	; 11
	PORTD &= ~(1 << LED_RED);
 724:	5f 98       	cbi	0x0b, 7	; 11
	
	uart_init();
 726:	0e 94 5d 00 	call	0xba	; 0xba <uart_init>
	uart_init2();
 72a:	0e 94 76 00 	call	0xec	; 0xec <uart_init2>
	
	wifiDirect_connection();
 72e:	0e 94 bf 00 	call	0x17e	; 0x17e <wifiDirect_connection>
	grp_request();
 732:	0e 94 09 01 	call	0x212	; 0x212 <grp_request>
	tcp_connection();
 736:	0e 94 9b 01 	call	0x336	; 0x336 <tcp_connection>
	
    while(1)
    {
		PORTD ^= (1 << LED_GREEN);
 73a:	90 e2       	ldi	r25, 0x20	; 32
 73c:	8b b1       	in	r24, 0x0b	; 11
 73e:	89 27       	eor	r24, r25
 740:	8b b9       	out	0x0b, r24	; 11
 742:	2f e7       	ldi	r18, 0x7F	; 127
 744:	34 e8       	ldi	r19, 0x84	; 132
 746:	8e e1       	ldi	r24, 0x1E	; 30
 748:	21 50       	subi	r18, 0x01	; 1
 74a:	30 40       	sbci	r19, 0x00	; 0
 74c:	80 40       	sbci	r24, 0x00	; 0
 74e:	e1 f7       	brne	.-8      	; 0x748 <main+0x2e>
 750:	00 c0       	rjmp	.+0      	; 0x752 <main+0x38>
 752:	00 00       	nop
 754:	f3 cf       	rjmp	.-26     	; 0x73c <main+0x22>

00000756 <strcmp>:
 756:	fb 01       	movw	r30, r22
 758:	dc 01       	movw	r26, r24
 75a:	8d 91       	ld	r24, X+
 75c:	01 90       	ld	r0, Z+
 75e:	80 19       	sub	r24, r0
 760:	01 10       	cpse	r0, r1
 762:	d9 f3       	breq	.-10     	; 0x75a <strcmp+0x4>
 764:	99 0b       	sbc	r25, r25
 766:	08 95       	ret

00000768 <strncpy>:
 768:	fb 01       	movw	r30, r22
 76a:	dc 01       	movw	r26, r24
 76c:	41 50       	subi	r20, 0x01	; 1
 76e:	50 40       	sbci	r21, 0x00	; 0
 770:	48 f0       	brcs	.+18     	; 0x784 <strncpy+0x1c>
 772:	01 90       	ld	r0, Z+
 774:	0d 92       	st	X+, r0
 776:	00 20       	and	r0, r0
 778:	c9 f7       	brne	.-14     	; 0x76c <strncpy+0x4>
 77a:	01 c0       	rjmp	.+2      	; 0x77e <strncpy+0x16>
 77c:	1d 92       	st	X+, r1
 77e:	41 50       	subi	r20, 0x01	; 1
 780:	50 40       	sbci	r21, 0x00	; 0
 782:	e0 f7       	brcc	.-8      	; 0x77c <strncpy+0x14>
 784:	08 95       	ret

00000786 <sprintf>:
 786:	ae e0       	ldi	r26, 0x0E	; 14
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	e9 ec       	ldi	r30, 0xC9	; 201
 78c:	f3 e0       	ldi	r31, 0x03	; 3
 78e:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <__prologue_saves__+0x1c>
 792:	0d 89       	ldd	r16, Y+21	; 0x15
 794:	1e 89       	ldd	r17, Y+22	; 0x16
 796:	86 e0       	ldi	r24, 0x06	; 6
 798:	8c 83       	std	Y+4, r24	; 0x04
 79a:	1a 83       	std	Y+2, r17	; 0x02
 79c:	09 83       	std	Y+1, r16	; 0x01
 79e:	8f ef       	ldi	r24, 0xFF	; 255
 7a0:	9f e7       	ldi	r25, 0x7F	; 127
 7a2:	9e 83       	std	Y+6, r25	; 0x06
 7a4:	8d 83       	std	Y+5, r24	; 0x05
 7a6:	ae 01       	movw	r20, r28
 7a8:	47 5e       	subi	r20, 0xE7	; 231
 7aa:	5f 4f       	sbci	r21, 0xFF	; 255
 7ac:	6f 89       	ldd	r22, Y+23	; 0x17
 7ae:	78 8d       	ldd	r23, Y+24	; 0x18
 7b0:	ce 01       	movw	r24, r28
 7b2:	01 96       	adiw	r24, 0x01	; 1
 7b4:	0e 94 e5 03 	call	0x7ca	; 0x7ca <vfprintf>
 7b8:	ef 81       	ldd	r30, Y+7	; 0x07
 7ba:	f8 85       	ldd	r31, Y+8	; 0x08
 7bc:	e0 0f       	add	r30, r16
 7be:	f1 1f       	adc	r31, r17
 7c0:	10 82       	st	Z, r1
 7c2:	2e 96       	adiw	r28, 0x0e	; 14
 7c4:	e4 e0       	ldi	r30, 0x04	; 4
 7c6:	0c 94 87 06 	jmp	0xd0e	; 0xd0e <__epilogue_restores__+0x1c>

000007ca <vfprintf>:
 7ca:	ac e0       	ldi	r26, 0x0C	; 12
 7cc:	b0 e0       	ldi	r27, 0x00	; 0
 7ce:	eb ee       	ldi	r30, 0xEB	; 235
 7d0:	f3 e0       	ldi	r31, 0x03	; 3
 7d2:	0c 94 5d 06 	jmp	0xcba	; 0xcba <__prologue_saves__>
 7d6:	7c 01       	movw	r14, r24
 7d8:	6b 01       	movw	r12, r22
 7da:	8a 01       	movw	r16, r20
 7dc:	fc 01       	movw	r30, r24
 7de:	17 82       	std	Z+7, r1	; 0x07
 7e0:	16 82       	std	Z+6, r1	; 0x06
 7e2:	83 81       	ldd	r24, Z+3	; 0x03
 7e4:	81 ff       	sbrs	r24, 1
 7e6:	bd c1       	rjmp	.+890    	; 0xb62 <vfprintf+0x398>
 7e8:	ce 01       	movw	r24, r28
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	4c 01       	movw	r8, r24
 7ee:	f7 01       	movw	r30, r14
 7f0:	93 81       	ldd	r25, Z+3	; 0x03
 7f2:	f6 01       	movw	r30, r12
 7f4:	93 fd       	sbrc	r25, 3
 7f6:	85 91       	lpm	r24, Z+
 7f8:	93 ff       	sbrs	r25, 3
 7fa:	81 91       	ld	r24, Z+
 7fc:	6f 01       	movw	r12, r30
 7fe:	88 23       	and	r24, r24
 800:	09 f4       	brne	.+2      	; 0x804 <vfprintf+0x3a>
 802:	ab c1       	rjmp	.+854    	; 0xb5a <vfprintf+0x390>
 804:	85 32       	cpi	r24, 0x25	; 37
 806:	39 f4       	brne	.+14     	; 0x816 <vfprintf+0x4c>
 808:	93 fd       	sbrc	r25, 3
 80a:	85 91       	lpm	r24, Z+
 80c:	93 ff       	sbrs	r25, 3
 80e:	81 91       	ld	r24, Z+
 810:	6f 01       	movw	r12, r30
 812:	85 32       	cpi	r24, 0x25	; 37
 814:	29 f4       	brne	.+10     	; 0x820 <vfprintf+0x56>
 816:	b7 01       	movw	r22, r14
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 81e:	e7 cf       	rjmp	.-50     	; 0x7ee <vfprintf+0x24>
 820:	51 2c       	mov	r5, r1
 822:	31 2c       	mov	r3, r1
 824:	20 e0       	ldi	r18, 0x00	; 0
 826:	20 32       	cpi	r18, 0x20	; 32
 828:	a0 f4       	brcc	.+40     	; 0x852 <vfprintf+0x88>
 82a:	8b 32       	cpi	r24, 0x2B	; 43
 82c:	69 f0       	breq	.+26     	; 0x848 <vfprintf+0x7e>
 82e:	30 f4       	brcc	.+12     	; 0x83c <vfprintf+0x72>
 830:	80 32       	cpi	r24, 0x20	; 32
 832:	59 f0       	breq	.+22     	; 0x84a <vfprintf+0x80>
 834:	83 32       	cpi	r24, 0x23	; 35
 836:	69 f4       	brne	.+26     	; 0x852 <vfprintf+0x88>
 838:	20 61       	ori	r18, 0x10	; 16
 83a:	2c c0       	rjmp	.+88     	; 0x894 <vfprintf+0xca>
 83c:	8d 32       	cpi	r24, 0x2D	; 45
 83e:	39 f0       	breq	.+14     	; 0x84e <vfprintf+0x84>
 840:	80 33       	cpi	r24, 0x30	; 48
 842:	39 f4       	brne	.+14     	; 0x852 <vfprintf+0x88>
 844:	21 60       	ori	r18, 0x01	; 1
 846:	26 c0       	rjmp	.+76     	; 0x894 <vfprintf+0xca>
 848:	22 60       	ori	r18, 0x02	; 2
 84a:	24 60       	ori	r18, 0x04	; 4
 84c:	23 c0       	rjmp	.+70     	; 0x894 <vfprintf+0xca>
 84e:	28 60       	ori	r18, 0x08	; 8
 850:	21 c0       	rjmp	.+66     	; 0x894 <vfprintf+0xca>
 852:	27 fd       	sbrc	r18, 7
 854:	27 c0       	rjmp	.+78     	; 0x8a4 <vfprintf+0xda>
 856:	30 ed       	ldi	r19, 0xD0	; 208
 858:	38 0f       	add	r19, r24
 85a:	3a 30       	cpi	r19, 0x0A	; 10
 85c:	78 f4       	brcc	.+30     	; 0x87c <vfprintf+0xb2>
 85e:	26 ff       	sbrs	r18, 6
 860:	06 c0       	rjmp	.+12     	; 0x86e <vfprintf+0xa4>
 862:	fa e0       	ldi	r31, 0x0A	; 10
 864:	5f 9e       	mul	r5, r31
 866:	30 0d       	add	r19, r0
 868:	11 24       	eor	r1, r1
 86a:	53 2e       	mov	r5, r19
 86c:	13 c0       	rjmp	.+38     	; 0x894 <vfprintf+0xca>
 86e:	8a e0       	ldi	r24, 0x0A	; 10
 870:	38 9e       	mul	r3, r24
 872:	30 0d       	add	r19, r0
 874:	11 24       	eor	r1, r1
 876:	33 2e       	mov	r3, r19
 878:	20 62       	ori	r18, 0x20	; 32
 87a:	0c c0       	rjmp	.+24     	; 0x894 <vfprintf+0xca>
 87c:	8e 32       	cpi	r24, 0x2E	; 46
 87e:	21 f4       	brne	.+8      	; 0x888 <vfprintf+0xbe>
 880:	26 fd       	sbrc	r18, 6
 882:	6b c1       	rjmp	.+726    	; 0xb5a <vfprintf+0x390>
 884:	20 64       	ori	r18, 0x40	; 64
 886:	06 c0       	rjmp	.+12     	; 0x894 <vfprintf+0xca>
 888:	8c 36       	cpi	r24, 0x6C	; 108
 88a:	11 f4       	brne	.+4      	; 0x890 <vfprintf+0xc6>
 88c:	20 68       	ori	r18, 0x80	; 128
 88e:	02 c0       	rjmp	.+4      	; 0x894 <vfprintf+0xca>
 890:	88 36       	cpi	r24, 0x68	; 104
 892:	41 f4       	brne	.+16     	; 0x8a4 <vfprintf+0xda>
 894:	f6 01       	movw	r30, r12
 896:	93 fd       	sbrc	r25, 3
 898:	85 91       	lpm	r24, Z+
 89a:	93 ff       	sbrs	r25, 3
 89c:	81 91       	ld	r24, Z+
 89e:	6f 01       	movw	r12, r30
 8a0:	81 11       	cpse	r24, r1
 8a2:	c1 cf       	rjmp	.-126    	; 0x826 <vfprintf+0x5c>
 8a4:	98 2f       	mov	r25, r24
 8a6:	9f 7d       	andi	r25, 0xDF	; 223
 8a8:	95 54       	subi	r25, 0x45	; 69
 8aa:	93 30       	cpi	r25, 0x03	; 3
 8ac:	28 f4       	brcc	.+10     	; 0x8b8 <vfprintf+0xee>
 8ae:	0c 5f       	subi	r16, 0xFC	; 252
 8b0:	1f 4f       	sbci	r17, 0xFF	; 255
 8b2:	ff e3       	ldi	r31, 0x3F	; 63
 8b4:	f9 83       	std	Y+1, r31	; 0x01
 8b6:	0d c0       	rjmp	.+26     	; 0x8d2 <vfprintf+0x108>
 8b8:	83 36       	cpi	r24, 0x63	; 99
 8ba:	31 f0       	breq	.+12     	; 0x8c8 <vfprintf+0xfe>
 8bc:	83 37       	cpi	r24, 0x73	; 115
 8be:	71 f0       	breq	.+28     	; 0x8dc <vfprintf+0x112>
 8c0:	83 35       	cpi	r24, 0x53	; 83
 8c2:	09 f0       	breq	.+2      	; 0x8c6 <vfprintf+0xfc>
 8c4:	5b c0       	rjmp	.+182    	; 0x97c <vfprintf+0x1b2>
 8c6:	22 c0       	rjmp	.+68     	; 0x90c <vfprintf+0x142>
 8c8:	f8 01       	movw	r30, r16
 8ca:	80 81       	ld	r24, Z
 8cc:	89 83       	std	Y+1, r24	; 0x01
 8ce:	0e 5f       	subi	r16, 0xFE	; 254
 8d0:	1f 4f       	sbci	r17, 0xFF	; 255
 8d2:	44 24       	eor	r4, r4
 8d4:	43 94       	inc	r4
 8d6:	51 2c       	mov	r5, r1
 8d8:	54 01       	movw	r10, r8
 8da:	15 c0       	rjmp	.+42     	; 0x906 <vfprintf+0x13c>
 8dc:	38 01       	movw	r6, r16
 8de:	f2 e0       	ldi	r31, 0x02	; 2
 8e0:	6f 0e       	add	r6, r31
 8e2:	71 1c       	adc	r7, r1
 8e4:	f8 01       	movw	r30, r16
 8e6:	a0 80       	ld	r10, Z
 8e8:	b1 80       	ldd	r11, Z+1	; 0x01
 8ea:	26 ff       	sbrs	r18, 6
 8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <vfprintf+0x12a>
 8ee:	65 2d       	mov	r22, r5
 8f0:	70 e0       	ldi	r23, 0x00	; 0
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x12e>
 8f4:	6f ef       	ldi	r22, 0xFF	; 255
 8f6:	7f ef       	ldi	r23, 0xFF	; 255
 8f8:	c5 01       	movw	r24, r10
 8fa:	2c 87       	std	Y+12, r18	; 0x0c
 8fc:	0e 94 c2 05 	call	0xb84	; 0xb84 <strnlen>
 900:	2c 01       	movw	r4, r24
 902:	83 01       	movw	r16, r6
 904:	2c 85       	ldd	r18, Y+12	; 0x0c
 906:	2f 77       	andi	r18, 0x7F	; 127
 908:	22 2e       	mov	r2, r18
 90a:	17 c0       	rjmp	.+46     	; 0x93a <vfprintf+0x170>
 90c:	38 01       	movw	r6, r16
 90e:	f2 e0       	ldi	r31, 0x02	; 2
 910:	6f 0e       	add	r6, r31
 912:	71 1c       	adc	r7, r1
 914:	f8 01       	movw	r30, r16
 916:	a0 80       	ld	r10, Z
 918:	b1 80       	ldd	r11, Z+1	; 0x01
 91a:	26 ff       	sbrs	r18, 6
 91c:	03 c0       	rjmp	.+6      	; 0x924 <vfprintf+0x15a>
 91e:	65 2d       	mov	r22, r5
 920:	70 e0       	ldi	r23, 0x00	; 0
 922:	02 c0       	rjmp	.+4      	; 0x928 <vfprintf+0x15e>
 924:	6f ef       	ldi	r22, 0xFF	; 255
 926:	7f ef       	ldi	r23, 0xFF	; 255
 928:	c5 01       	movw	r24, r10
 92a:	2c 87       	std	Y+12, r18	; 0x0c
 92c:	0e 94 b7 05 	call	0xb6e	; 0xb6e <strnlen_P>
 930:	2c 01       	movw	r4, r24
 932:	2c 85       	ldd	r18, Y+12	; 0x0c
 934:	20 68       	ori	r18, 0x80	; 128
 936:	22 2e       	mov	r2, r18
 938:	83 01       	movw	r16, r6
 93a:	23 fc       	sbrc	r2, 3
 93c:	1b c0       	rjmp	.+54     	; 0x974 <vfprintf+0x1aa>
 93e:	83 2d       	mov	r24, r3
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	48 16       	cp	r4, r24
 944:	59 06       	cpc	r5, r25
 946:	b0 f4       	brcc	.+44     	; 0x974 <vfprintf+0x1aa>
 948:	b7 01       	movw	r22, r14
 94a:	80 e2       	ldi	r24, 0x20	; 32
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 952:	3a 94       	dec	r3
 954:	f4 cf       	rjmp	.-24     	; 0x93e <vfprintf+0x174>
 956:	f5 01       	movw	r30, r10
 958:	27 fc       	sbrc	r2, 7
 95a:	85 91       	lpm	r24, Z+
 95c:	27 fe       	sbrs	r2, 7
 95e:	81 91       	ld	r24, Z+
 960:	5f 01       	movw	r10, r30
 962:	b7 01       	movw	r22, r14
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 96a:	31 10       	cpse	r3, r1
 96c:	3a 94       	dec	r3
 96e:	f1 e0       	ldi	r31, 0x01	; 1
 970:	4f 1a       	sub	r4, r31
 972:	51 08       	sbc	r5, r1
 974:	41 14       	cp	r4, r1
 976:	51 04       	cpc	r5, r1
 978:	71 f7       	brne	.-36     	; 0x956 <vfprintf+0x18c>
 97a:	e5 c0       	rjmp	.+458    	; 0xb46 <vfprintf+0x37c>
 97c:	84 36       	cpi	r24, 0x64	; 100
 97e:	11 f0       	breq	.+4      	; 0x984 <vfprintf+0x1ba>
 980:	89 36       	cpi	r24, 0x69	; 105
 982:	39 f5       	brne	.+78     	; 0x9d2 <vfprintf+0x208>
 984:	f8 01       	movw	r30, r16
 986:	27 ff       	sbrs	r18, 7
 988:	07 c0       	rjmp	.+14     	; 0x998 <vfprintf+0x1ce>
 98a:	60 81       	ld	r22, Z
 98c:	71 81       	ldd	r23, Z+1	; 0x01
 98e:	82 81       	ldd	r24, Z+2	; 0x02
 990:	93 81       	ldd	r25, Z+3	; 0x03
 992:	0c 5f       	subi	r16, 0xFC	; 252
 994:	1f 4f       	sbci	r17, 0xFF	; 255
 996:	08 c0       	rjmp	.+16     	; 0x9a8 <vfprintf+0x1de>
 998:	60 81       	ld	r22, Z
 99a:	71 81       	ldd	r23, Z+1	; 0x01
 99c:	88 27       	eor	r24, r24
 99e:	77 fd       	sbrc	r23, 7
 9a0:	80 95       	com	r24
 9a2:	98 2f       	mov	r25, r24
 9a4:	0e 5f       	subi	r16, 0xFE	; 254
 9a6:	1f 4f       	sbci	r17, 0xFF	; 255
 9a8:	2f 76       	andi	r18, 0x6F	; 111
 9aa:	b2 2e       	mov	r11, r18
 9ac:	97 ff       	sbrs	r25, 7
 9ae:	09 c0       	rjmp	.+18     	; 0x9c2 <vfprintf+0x1f8>
 9b0:	90 95       	com	r25
 9b2:	80 95       	com	r24
 9b4:	70 95       	com	r23
 9b6:	61 95       	neg	r22
 9b8:	7f 4f       	sbci	r23, 0xFF	; 255
 9ba:	8f 4f       	sbci	r24, 0xFF	; 255
 9bc:	9f 4f       	sbci	r25, 0xFF	; 255
 9be:	20 68       	ori	r18, 0x80	; 128
 9c0:	b2 2e       	mov	r11, r18
 9c2:	2a e0       	ldi	r18, 0x0A	; 10
 9c4:	30 e0       	ldi	r19, 0x00	; 0
 9c6:	a4 01       	movw	r20, r8
 9c8:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__ultoa_invert>
 9cc:	a8 2e       	mov	r10, r24
 9ce:	a8 18       	sub	r10, r8
 9d0:	44 c0       	rjmp	.+136    	; 0xa5a <vfprintf+0x290>
 9d2:	85 37       	cpi	r24, 0x75	; 117
 9d4:	29 f4       	brne	.+10     	; 0x9e0 <vfprintf+0x216>
 9d6:	2f 7e       	andi	r18, 0xEF	; 239
 9d8:	b2 2e       	mov	r11, r18
 9da:	2a e0       	ldi	r18, 0x0A	; 10
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	25 c0       	rjmp	.+74     	; 0xa2a <vfprintf+0x260>
 9e0:	f2 2f       	mov	r31, r18
 9e2:	f9 7f       	andi	r31, 0xF9	; 249
 9e4:	bf 2e       	mov	r11, r31
 9e6:	8f 36       	cpi	r24, 0x6F	; 111
 9e8:	c1 f0       	breq	.+48     	; 0xa1a <vfprintf+0x250>
 9ea:	18 f4       	brcc	.+6      	; 0x9f2 <vfprintf+0x228>
 9ec:	88 35       	cpi	r24, 0x58	; 88
 9ee:	79 f0       	breq	.+30     	; 0xa0e <vfprintf+0x244>
 9f0:	b4 c0       	rjmp	.+360    	; 0xb5a <vfprintf+0x390>
 9f2:	80 37       	cpi	r24, 0x70	; 112
 9f4:	19 f0       	breq	.+6      	; 0x9fc <vfprintf+0x232>
 9f6:	88 37       	cpi	r24, 0x78	; 120
 9f8:	21 f0       	breq	.+8      	; 0xa02 <vfprintf+0x238>
 9fa:	af c0       	rjmp	.+350    	; 0xb5a <vfprintf+0x390>
 9fc:	2f 2f       	mov	r18, r31
 9fe:	20 61       	ori	r18, 0x10	; 16
 a00:	b2 2e       	mov	r11, r18
 a02:	b4 fe       	sbrs	r11, 4
 a04:	0d c0       	rjmp	.+26     	; 0xa20 <vfprintf+0x256>
 a06:	8b 2d       	mov	r24, r11
 a08:	84 60       	ori	r24, 0x04	; 4
 a0a:	b8 2e       	mov	r11, r24
 a0c:	09 c0       	rjmp	.+18     	; 0xa20 <vfprintf+0x256>
 a0e:	24 ff       	sbrs	r18, 4
 a10:	0a c0       	rjmp	.+20     	; 0xa26 <vfprintf+0x25c>
 a12:	9f 2f       	mov	r25, r31
 a14:	96 60       	ori	r25, 0x06	; 6
 a16:	b9 2e       	mov	r11, r25
 a18:	06 c0       	rjmp	.+12     	; 0xa26 <vfprintf+0x25c>
 a1a:	28 e0       	ldi	r18, 0x08	; 8
 a1c:	30 e0       	ldi	r19, 0x00	; 0
 a1e:	05 c0       	rjmp	.+10     	; 0xa2a <vfprintf+0x260>
 a20:	20 e1       	ldi	r18, 0x10	; 16
 a22:	30 e0       	ldi	r19, 0x00	; 0
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <vfprintf+0x260>
 a26:	20 e1       	ldi	r18, 0x10	; 16
 a28:	32 e0       	ldi	r19, 0x02	; 2
 a2a:	f8 01       	movw	r30, r16
 a2c:	b7 fe       	sbrs	r11, 7
 a2e:	07 c0       	rjmp	.+14     	; 0xa3e <vfprintf+0x274>
 a30:	60 81       	ld	r22, Z
 a32:	71 81       	ldd	r23, Z+1	; 0x01
 a34:	82 81       	ldd	r24, Z+2	; 0x02
 a36:	93 81       	ldd	r25, Z+3	; 0x03
 a38:	0c 5f       	subi	r16, 0xFC	; 252
 a3a:	1f 4f       	sbci	r17, 0xFF	; 255
 a3c:	06 c0       	rjmp	.+12     	; 0xa4a <vfprintf+0x280>
 a3e:	60 81       	ld	r22, Z
 a40:	71 81       	ldd	r23, Z+1	; 0x01
 a42:	80 e0       	ldi	r24, 0x00	; 0
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	0e 5f       	subi	r16, 0xFE	; 254
 a48:	1f 4f       	sbci	r17, 0xFF	; 255
 a4a:	a4 01       	movw	r20, r8
 a4c:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__ultoa_invert>
 a50:	a8 2e       	mov	r10, r24
 a52:	a8 18       	sub	r10, r8
 a54:	fb 2d       	mov	r31, r11
 a56:	ff 77       	andi	r31, 0x7F	; 127
 a58:	bf 2e       	mov	r11, r31
 a5a:	b6 fe       	sbrs	r11, 6
 a5c:	0b c0       	rjmp	.+22     	; 0xa74 <vfprintf+0x2aa>
 a5e:	2b 2d       	mov	r18, r11
 a60:	2e 7f       	andi	r18, 0xFE	; 254
 a62:	a5 14       	cp	r10, r5
 a64:	50 f4       	brcc	.+20     	; 0xa7a <vfprintf+0x2b0>
 a66:	b4 fe       	sbrs	r11, 4
 a68:	0a c0       	rjmp	.+20     	; 0xa7e <vfprintf+0x2b4>
 a6a:	b2 fc       	sbrc	r11, 2
 a6c:	08 c0       	rjmp	.+16     	; 0xa7e <vfprintf+0x2b4>
 a6e:	2b 2d       	mov	r18, r11
 a70:	2e 7e       	andi	r18, 0xEE	; 238
 a72:	05 c0       	rjmp	.+10     	; 0xa7e <vfprintf+0x2b4>
 a74:	7a 2c       	mov	r7, r10
 a76:	2b 2d       	mov	r18, r11
 a78:	03 c0       	rjmp	.+6      	; 0xa80 <vfprintf+0x2b6>
 a7a:	7a 2c       	mov	r7, r10
 a7c:	01 c0       	rjmp	.+2      	; 0xa80 <vfprintf+0x2b6>
 a7e:	75 2c       	mov	r7, r5
 a80:	24 ff       	sbrs	r18, 4
 a82:	0d c0       	rjmp	.+26     	; 0xa9e <vfprintf+0x2d4>
 a84:	fe 01       	movw	r30, r28
 a86:	ea 0d       	add	r30, r10
 a88:	f1 1d       	adc	r31, r1
 a8a:	80 81       	ld	r24, Z
 a8c:	80 33       	cpi	r24, 0x30	; 48
 a8e:	11 f4       	brne	.+4      	; 0xa94 <vfprintf+0x2ca>
 a90:	29 7e       	andi	r18, 0xE9	; 233
 a92:	09 c0       	rjmp	.+18     	; 0xaa6 <vfprintf+0x2dc>
 a94:	22 ff       	sbrs	r18, 2
 a96:	06 c0       	rjmp	.+12     	; 0xaa4 <vfprintf+0x2da>
 a98:	73 94       	inc	r7
 a9a:	73 94       	inc	r7
 a9c:	04 c0       	rjmp	.+8      	; 0xaa6 <vfprintf+0x2dc>
 a9e:	82 2f       	mov	r24, r18
 aa0:	86 78       	andi	r24, 0x86	; 134
 aa2:	09 f0       	breq	.+2      	; 0xaa6 <vfprintf+0x2dc>
 aa4:	73 94       	inc	r7
 aa6:	23 fd       	sbrc	r18, 3
 aa8:	13 c0       	rjmp	.+38     	; 0xad0 <vfprintf+0x306>
 aaa:	20 ff       	sbrs	r18, 0
 aac:	06 c0       	rjmp	.+12     	; 0xaba <vfprintf+0x2f0>
 aae:	5a 2c       	mov	r5, r10
 ab0:	73 14       	cp	r7, r3
 ab2:	18 f4       	brcc	.+6      	; 0xaba <vfprintf+0x2f0>
 ab4:	53 0c       	add	r5, r3
 ab6:	57 18       	sub	r5, r7
 ab8:	73 2c       	mov	r7, r3
 aba:	73 14       	cp	r7, r3
 abc:	68 f4       	brcc	.+26     	; 0xad8 <vfprintf+0x30e>
 abe:	b7 01       	movw	r22, r14
 ac0:	80 e2       	ldi	r24, 0x20	; 32
 ac2:	90 e0       	ldi	r25, 0x00	; 0
 ac4:	2c 87       	std	Y+12, r18	; 0x0c
 ac6:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 aca:	73 94       	inc	r7
 acc:	2c 85       	ldd	r18, Y+12	; 0x0c
 ace:	f5 cf       	rjmp	.-22     	; 0xaba <vfprintf+0x2f0>
 ad0:	73 14       	cp	r7, r3
 ad2:	10 f4       	brcc	.+4      	; 0xad8 <vfprintf+0x30e>
 ad4:	37 18       	sub	r3, r7
 ad6:	01 c0       	rjmp	.+2      	; 0xada <vfprintf+0x310>
 ad8:	31 2c       	mov	r3, r1
 ada:	24 ff       	sbrs	r18, 4
 adc:	12 c0       	rjmp	.+36     	; 0xb02 <vfprintf+0x338>
 ade:	b7 01       	movw	r22, r14
 ae0:	80 e3       	ldi	r24, 0x30	; 48
 ae2:	90 e0       	ldi	r25, 0x00	; 0
 ae4:	2c 87       	std	Y+12, r18	; 0x0c
 ae6:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 aea:	2c 85       	ldd	r18, Y+12	; 0x0c
 aec:	22 ff       	sbrs	r18, 2
 aee:	17 c0       	rjmp	.+46     	; 0xb1e <vfprintf+0x354>
 af0:	21 ff       	sbrs	r18, 1
 af2:	03 c0       	rjmp	.+6      	; 0xafa <vfprintf+0x330>
 af4:	88 e5       	ldi	r24, 0x58	; 88
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	02 c0       	rjmp	.+4      	; 0xafe <vfprintf+0x334>
 afa:	88 e7       	ldi	r24, 0x78	; 120
 afc:	90 e0       	ldi	r25, 0x00	; 0
 afe:	b7 01       	movw	r22, r14
 b00:	0c c0       	rjmp	.+24     	; 0xb1a <vfprintf+0x350>
 b02:	82 2f       	mov	r24, r18
 b04:	86 78       	andi	r24, 0x86	; 134
 b06:	59 f0       	breq	.+22     	; 0xb1e <vfprintf+0x354>
 b08:	21 fd       	sbrc	r18, 1
 b0a:	02 c0       	rjmp	.+4      	; 0xb10 <vfprintf+0x346>
 b0c:	80 e2       	ldi	r24, 0x20	; 32
 b0e:	01 c0       	rjmp	.+2      	; 0xb12 <vfprintf+0x348>
 b10:	8b e2       	ldi	r24, 0x2B	; 43
 b12:	27 fd       	sbrc	r18, 7
 b14:	8d e2       	ldi	r24, 0x2D	; 45
 b16:	b7 01       	movw	r22, r14
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 b1e:	a5 14       	cp	r10, r5
 b20:	38 f4       	brcc	.+14     	; 0xb30 <vfprintf+0x366>
 b22:	b7 01       	movw	r22, r14
 b24:	80 e3       	ldi	r24, 0x30	; 48
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 b2c:	5a 94       	dec	r5
 b2e:	f7 cf       	rjmp	.-18     	; 0xb1e <vfprintf+0x354>
 b30:	aa 94       	dec	r10
 b32:	f4 01       	movw	r30, r8
 b34:	ea 0d       	add	r30, r10
 b36:	f1 1d       	adc	r31, r1
 b38:	80 81       	ld	r24, Z
 b3a:	b7 01       	movw	r22, r14
 b3c:	90 e0       	ldi	r25, 0x00	; 0
 b3e:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 b42:	a1 10       	cpse	r10, r1
 b44:	f5 cf       	rjmp	.-22     	; 0xb30 <vfprintf+0x366>
 b46:	33 20       	and	r3, r3
 b48:	09 f4       	brne	.+2      	; 0xb4c <vfprintf+0x382>
 b4a:	51 ce       	rjmp	.-862    	; 0x7ee <vfprintf+0x24>
 b4c:	b7 01       	movw	r22, r14
 b4e:	80 e2       	ldi	r24, 0x20	; 32
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	0e 94 cd 05 	call	0xb9a	; 0xb9a <fputc>
 b56:	3a 94       	dec	r3
 b58:	f6 cf       	rjmp	.-20     	; 0xb46 <vfprintf+0x37c>
 b5a:	f7 01       	movw	r30, r14
 b5c:	86 81       	ldd	r24, Z+6	; 0x06
 b5e:	97 81       	ldd	r25, Z+7	; 0x07
 b60:	02 c0       	rjmp	.+4      	; 0xb66 <vfprintf+0x39c>
 b62:	8f ef       	ldi	r24, 0xFF	; 255
 b64:	9f ef       	ldi	r25, 0xFF	; 255
 b66:	2c 96       	adiw	r28, 0x0c	; 12
 b68:	e2 e1       	ldi	r30, 0x12	; 18
 b6a:	0c 94 79 06 	jmp	0xcf2	; 0xcf2 <__epilogue_restores__>

00000b6e <strnlen_P>:
 b6e:	fc 01       	movw	r30, r24
 b70:	05 90       	lpm	r0, Z+
 b72:	61 50       	subi	r22, 0x01	; 1
 b74:	70 40       	sbci	r23, 0x00	; 0
 b76:	01 10       	cpse	r0, r1
 b78:	d8 f7       	brcc	.-10     	; 0xb70 <strnlen_P+0x2>
 b7a:	80 95       	com	r24
 b7c:	90 95       	com	r25
 b7e:	8e 0f       	add	r24, r30
 b80:	9f 1f       	adc	r25, r31
 b82:	08 95       	ret

00000b84 <strnlen>:
 b84:	fc 01       	movw	r30, r24
 b86:	61 50       	subi	r22, 0x01	; 1
 b88:	70 40       	sbci	r23, 0x00	; 0
 b8a:	01 90       	ld	r0, Z+
 b8c:	01 10       	cpse	r0, r1
 b8e:	d8 f7       	brcc	.-10     	; 0xb86 <strnlen+0x2>
 b90:	80 95       	com	r24
 b92:	90 95       	com	r25
 b94:	8e 0f       	add	r24, r30
 b96:	9f 1f       	adc	r25, r31
 b98:	08 95       	ret

00000b9a <fputc>:
 b9a:	0f 93       	push	r16
 b9c:	1f 93       	push	r17
 b9e:	cf 93       	push	r28
 ba0:	df 93       	push	r29
 ba2:	18 2f       	mov	r17, r24
 ba4:	09 2f       	mov	r16, r25
 ba6:	eb 01       	movw	r28, r22
 ba8:	8b 81       	ldd	r24, Y+3	; 0x03
 baa:	81 fd       	sbrc	r24, 1
 bac:	03 c0       	rjmp	.+6      	; 0xbb4 <fputc+0x1a>
 bae:	8f ef       	ldi	r24, 0xFF	; 255
 bb0:	9f ef       	ldi	r25, 0xFF	; 255
 bb2:	20 c0       	rjmp	.+64     	; 0xbf4 <fputc+0x5a>
 bb4:	82 ff       	sbrs	r24, 2
 bb6:	10 c0       	rjmp	.+32     	; 0xbd8 <fputc+0x3e>
 bb8:	4e 81       	ldd	r20, Y+6	; 0x06
 bba:	5f 81       	ldd	r21, Y+7	; 0x07
 bbc:	2c 81       	ldd	r18, Y+4	; 0x04
 bbe:	3d 81       	ldd	r19, Y+5	; 0x05
 bc0:	42 17       	cp	r20, r18
 bc2:	53 07       	cpc	r21, r19
 bc4:	7c f4       	brge	.+30     	; 0xbe4 <fputc+0x4a>
 bc6:	e8 81       	ld	r30, Y
 bc8:	f9 81       	ldd	r31, Y+1	; 0x01
 bca:	9f 01       	movw	r18, r30
 bcc:	2f 5f       	subi	r18, 0xFF	; 255
 bce:	3f 4f       	sbci	r19, 0xFF	; 255
 bd0:	39 83       	std	Y+1, r19	; 0x01
 bd2:	28 83       	st	Y, r18
 bd4:	10 83       	st	Z, r17
 bd6:	06 c0       	rjmp	.+12     	; 0xbe4 <fputc+0x4a>
 bd8:	e8 85       	ldd	r30, Y+8	; 0x08
 bda:	f9 85       	ldd	r31, Y+9	; 0x09
 bdc:	81 2f       	mov	r24, r17
 bde:	09 95       	icall
 be0:	89 2b       	or	r24, r25
 be2:	29 f7       	brne	.-54     	; 0xbae <fputc+0x14>
 be4:	2e 81       	ldd	r18, Y+6	; 0x06
 be6:	3f 81       	ldd	r19, Y+7	; 0x07
 be8:	2f 5f       	subi	r18, 0xFF	; 255
 bea:	3f 4f       	sbci	r19, 0xFF	; 255
 bec:	3f 83       	std	Y+7, r19	; 0x07
 bee:	2e 83       	std	Y+6, r18	; 0x06
 bf0:	81 2f       	mov	r24, r17
 bf2:	90 2f       	mov	r25, r16
 bf4:	df 91       	pop	r29
 bf6:	cf 91       	pop	r28
 bf8:	1f 91       	pop	r17
 bfa:	0f 91       	pop	r16
 bfc:	08 95       	ret

00000bfe <__ultoa_invert>:
 bfe:	fa 01       	movw	r30, r20
 c00:	aa 27       	eor	r26, r26
 c02:	28 30       	cpi	r18, 0x08	; 8
 c04:	51 f1       	breq	.+84     	; 0xc5a <__ultoa_invert+0x5c>
 c06:	20 31       	cpi	r18, 0x10	; 16
 c08:	81 f1       	breq	.+96     	; 0xc6a <__ultoa_invert+0x6c>
 c0a:	e8 94       	clt
 c0c:	6f 93       	push	r22
 c0e:	6e 7f       	andi	r22, 0xFE	; 254
 c10:	6e 5f       	subi	r22, 0xFE	; 254
 c12:	7f 4f       	sbci	r23, 0xFF	; 255
 c14:	8f 4f       	sbci	r24, 0xFF	; 255
 c16:	9f 4f       	sbci	r25, 0xFF	; 255
 c18:	af 4f       	sbci	r26, 0xFF	; 255
 c1a:	b1 e0       	ldi	r27, 0x01	; 1
 c1c:	3e d0       	rcall	.+124    	; 0xc9a <__ultoa_invert+0x9c>
 c1e:	b4 e0       	ldi	r27, 0x04	; 4
 c20:	3c d0       	rcall	.+120    	; 0xc9a <__ultoa_invert+0x9c>
 c22:	67 0f       	add	r22, r23
 c24:	78 1f       	adc	r23, r24
 c26:	89 1f       	adc	r24, r25
 c28:	9a 1f       	adc	r25, r26
 c2a:	a1 1d       	adc	r26, r1
 c2c:	68 0f       	add	r22, r24
 c2e:	79 1f       	adc	r23, r25
 c30:	8a 1f       	adc	r24, r26
 c32:	91 1d       	adc	r25, r1
 c34:	a1 1d       	adc	r26, r1
 c36:	6a 0f       	add	r22, r26
 c38:	71 1d       	adc	r23, r1
 c3a:	81 1d       	adc	r24, r1
 c3c:	91 1d       	adc	r25, r1
 c3e:	a1 1d       	adc	r26, r1
 c40:	20 d0       	rcall	.+64     	; 0xc82 <__ultoa_invert+0x84>
 c42:	09 f4       	brne	.+2      	; 0xc46 <__ultoa_invert+0x48>
 c44:	68 94       	set
 c46:	3f 91       	pop	r19
 c48:	2a e0       	ldi	r18, 0x0A	; 10
 c4a:	26 9f       	mul	r18, r22
 c4c:	11 24       	eor	r1, r1
 c4e:	30 19       	sub	r19, r0
 c50:	30 5d       	subi	r19, 0xD0	; 208
 c52:	31 93       	st	Z+, r19
 c54:	de f6       	brtc	.-74     	; 0xc0c <__ultoa_invert+0xe>
 c56:	cf 01       	movw	r24, r30
 c58:	08 95       	ret
 c5a:	46 2f       	mov	r20, r22
 c5c:	47 70       	andi	r20, 0x07	; 7
 c5e:	40 5d       	subi	r20, 0xD0	; 208
 c60:	41 93       	st	Z+, r20
 c62:	b3 e0       	ldi	r27, 0x03	; 3
 c64:	0f d0       	rcall	.+30     	; 0xc84 <__ultoa_invert+0x86>
 c66:	c9 f7       	brne	.-14     	; 0xc5a <__ultoa_invert+0x5c>
 c68:	f6 cf       	rjmp	.-20     	; 0xc56 <__ultoa_invert+0x58>
 c6a:	46 2f       	mov	r20, r22
 c6c:	4f 70       	andi	r20, 0x0F	; 15
 c6e:	40 5d       	subi	r20, 0xD0	; 208
 c70:	4a 33       	cpi	r20, 0x3A	; 58
 c72:	18 f0       	brcs	.+6      	; 0xc7a <__ultoa_invert+0x7c>
 c74:	49 5d       	subi	r20, 0xD9	; 217
 c76:	31 fd       	sbrc	r19, 1
 c78:	40 52       	subi	r20, 0x20	; 32
 c7a:	41 93       	st	Z+, r20
 c7c:	02 d0       	rcall	.+4      	; 0xc82 <__ultoa_invert+0x84>
 c7e:	a9 f7       	brne	.-22     	; 0xc6a <__ultoa_invert+0x6c>
 c80:	ea cf       	rjmp	.-44     	; 0xc56 <__ultoa_invert+0x58>
 c82:	b4 e0       	ldi	r27, 0x04	; 4
 c84:	a6 95       	lsr	r26
 c86:	97 95       	ror	r25
 c88:	87 95       	ror	r24
 c8a:	77 95       	ror	r23
 c8c:	67 95       	ror	r22
 c8e:	ba 95       	dec	r27
 c90:	c9 f7       	brne	.-14     	; 0xc84 <__ultoa_invert+0x86>
 c92:	00 97       	sbiw	r24, 0x00	; 0
 c94:	61 05       	cpc	r22, r1
 c96:	71 05       	cpc	r23, r1
 c98:	08 95       	ret
 c9a:	9b 01       	movw	r18, r22
 c9c:	ac 01       	movw	r20, r24
 c9e:	0a 2e       	mov	r0, r26
 ca0:	06 94       	lsr	r0
 ca2:	57 95       	ror	r21
 ca4:	47 95       	ror	r20
 ca6:	37 95       	ror	r19
 ca8:	27 95       	ror	r18
 caa:	ba 95       	dec	r27
 cac:	c9 f7       	brne	.-14     	; 0xca0 <__ultoa_invert+0xa2>
 cae:	62 0f       	add	r22, r18
 cb0:	73 1f       	adc	r23, r19
 cb2:	84 1f       	adc	r24, r20
 cb4:	95 1f       	adc	r25, r21
 cb6:	a0 1d       	adc	r26, r0
 cb8:	08 95       	ret

00000cba <__prologue_saves__>:
 cba:	2f 92       	push	r2
 cbc:	3f 92       	push	r3
 cbe:	4f 92       	push	r4
 cc0:	5f 92       	push	r5
 cc2:	6f 92       	push	r6
 cc4:	7f 92       	push	r7
 cc6:	8f 92       	push	r8
 cc8:	9f 92       	push	r9
 cca:	af 92       	push	r10
 ccc:	bf 92       	push	r11
 cce:	cf 92       	push	r12
 cd0:	df 92       	push	r13
 cd2:	ef 92       	push	r14
 cd4:	ff 92       	push	r15
 cd6:	0f 93       	push	r16
 cd8:	1f 93       	push	r17
 cda:	cf 93       	push	r28
 cdc:	df 93       	push	r29
 cde:	cd b7       	in	r28, 0x3d	; 61
 ce0:	de b7       	in	r29, 0x3e	; 62
 ce2:	ca 1b       	sub	r28, r26
 ce4:	db 0b       	sbc	r29, r27
 ce6:	0f b6       	in	r0, 0x3f	; 63
 ce8:	f8 94       	cli
 cea:	de bf       	out	0x3e, r29	; 62
 cec:	0f be       	out	0x3f, r0	; 63
 cee:	cd bf       	out	0x3d, r28	; 61
 cf0:	09 94       	ijmp

00000cf2 <__epilogue_restores__>:
 cf2:	2a 88       	ldd	r2, Y+18	; 0x12
 cf4:	39 88       	ldd	r3, Y+17	; 0x11
 cf6:	48 88       	ldd	r4, Y+16	; 0x10
 cf8:	5f 84       	ldd	r5, Y+15	; 0x0f
 cfa:	6e 84       	ldd	r6, Y+14	; 0x0e
 cfc:	7d 84       	ldd	r7, Y+13	; 0x0d
 cfe:	8c 84       	ldd	r8, Y+12	; 0x0c
 d00:	9b 84       	ldd	r9, Y+11	; 0x0b
 d02:	aa 84       	ldd	r10, Y+10	; 0x0a
 d04:	b9 84       	ldd	r11, Y+9	; 0x09
 d06:	c8 84       	ldd	r12, Y+8	; 0x08
 d08:	df 80       	ldd	r13, Y+7	; 0x07
 d0a:	ee 80       	ldd	r14, Y+6	; 0x06
 d0c:	fd 80       	ldd	r15, Y+5	; 0x05
 d0e:	0c 81       	ldd	r16, Y+4	; 0x04
 d10:	1b 81       	ldd	r17, Y+3	; 0x03
 d12:	aa 81       	ldd	r26, Y+2	; 0x02
 d14:	b9 81       	ldd	r27, Y+1	; 0x01
 d16:	ce 0f       	add	r28, r30
 d18:	d1 1d       	adc	r29, r1
 d1a:	0f b6       	in	r0, 0x3f	; 63
 d1c:	f8 94       	cli
 d1e:	de bf       	out	0x3e, r29	; 62
 d20:	0f be       	out	0x3f, r0	; 63
 d22:	cd bf       	out	0x3d, r28	; 61
 d24:	ed 01       	movw	r28, r26
 d26:	08 95       	ret

00000d28 <_exit>:
 d28:	f8 94       	cli

00000d2a <__stop_program>:
 d2a:	ff cf       	rjmp	.-2      	; 0xd2a <__stop_program>
